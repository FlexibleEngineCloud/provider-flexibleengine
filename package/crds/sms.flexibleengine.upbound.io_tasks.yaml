---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: tasks.sms.flexibleengine.upbound.io
spec:
  group: sms.flexibleengine.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - flexibleengine
    kind: Task
    listKind: TaskList
    plural: tasks
    singular: task
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Task is the Schema for the Tasks API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TaskSpec defines the desired state of Task
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  action:
                    description: Specifies the operation after the task is created.
                      The value can be start, stop and restart.
                    type: string
                  migrationIp:
                    description: Specifies the IP address of the target server. Use
                      the EIP of the target server if the migration network type is
                      Internet. Use the private IP address of the target server if
                      the migration network type is Direct Connect or VPN. Changing
                      this parameter will create a new resource.
                    type: string
                  osType:
                    description: Specifies the OS type of the source server. The value
                      can be WINDOWS and LINUX. Changing this parameter will create
                      a new resource.
                    type: string
                  projectId:
                    description: Specifies the project ID where the target server
                      is located. If omitted, the default project in the region will
                      be used. Changing this parameter will create a new resource.
                    type: string
                  region:
                    description: Specifies the region where the target server is located.
                      If omitted, the provider-level region will be used. Changing
                      this parameter will create a new resource.
                    type: string
                  sourceServerId:
                    description: Specifies the ID of the source server. Changing this
                      parameter will create a new resource.
                    type: string
                  startTargetServer:
                    description: Specifies whether to start the target server after
                      the migration. The default value is true. Changing this parameter
                      will create a new resource.
                    type: boolean
                  syncing:
                    description: '- Specifies whether to perform a continuous synchronization
                      after the first replication. The default value is false. Changing
                      this parameter will create a new resource.'
                    type: boolean
                  targetServerDisks:
                    description: Specifies the disk configurations of the target server.
                      If omitted, it will be obtained from the source server. The
                      object is documented below. Changing this parameter will create
                      a new resource.
                    items:
                      properties:
                        deviceType:
                          description: Specifies the disk type. The value can be NORMAL
                            and BOOT. Changing this parameter will create a new resource.
                          type: string
                        diskId:
                          description: Specifies the disk index, e.g. "0". Changing
                            this parameter will create a new resource.
                          type: string
                        name:
                          description: Specifies the disk name, e.g. "/dev/sda". Changing
                            this parameter will create a new resource.
                          type: string
                        physicalVolumes:
                          description: Specifies an array of physical volume informations.
                            The object is documented below. Changing this parameter
                            will create a new resource.
                          items:
                            properties:
                              deviceType:
                                description: Specifies the disk type. The value can
                                  be NORMAL and BOOT. Changing this parameter will
                                  create a new resource.
                                type: string
                              fileSystem:
                                description: Specifies the file system type, e.g.
                                  "ext4". Changing this parameter will create a new
                                  resource.
                                type: string
                              index:
                                description: Specifies the serial number of the volume.
                                  Changing this parameter will create a new resource.
                                type: number
                              mountPoint:
                                description: Specifies the mount point, e.g. "/".
                                  Changing this parameter will create a new resource.
                                type: string
                              name:
                                description: Specifies the disk name, e.g. "/dev/sda".
                                  Changing this parameter will create a new resource.
                                type: string
                              size:
                                description: Specifies the volume size in MB. Changing
                                  this parameter will create a new resource.
                                type: number
                              usedSize:
                                description: Specifies the used space in MB. Changing
                                  this parameter will create a new resource.
                                type: number
                              uuid:
                                description: Specifies the GUID of the volume. Changing
                                  this parameter will create a new resource.
                                type: string
                            required:
                            - deviceType
                            - fileSystem
                            - index
                            - mountPoint
                            - name
                            - size
                            type: object
                          type: array
                        size:
                          description: Specifies the volume size in MB. Changing this
                            parameter will create a new resource.
                          type: number
                        usedSize:
                          description: Specifies the used space in MB. Changing this
                            parameter will create a new resource.
                          type: number
                      required:
                      - deviceType
                      - name
                      - size
                      type: object
                    type: array
                  targetServerId:
                    description: Specifies the existing server ID as the target server.
                      This parameter and vm_template_id are alternative. Changing
                      this parameter will create a new resource.
                    type: string
                  type:
                    description: Specifies the type of the migration task. Available
                      values are MIGRATE_FILE(file-level migration) and MIGRATE_BLOCK(block-level
                      migration). Changing this parameter will create a new resource.
                    type: string
                  usePublicIp:
                    description: Specifies whether to use a public IP address for
                      migration. The default value is true. Changing this parameter
                      will create a new resource.
                    type: boolean
                  vmTemplateId:
                    description: Specifies the template used to create the target
                      server automatically. This parameter and target_server_id are
                      alternative. Changing this parameter will create a new resource.
                    type: string
                  vmTemplateIdRef:
                    description: Reference to a ServerTemplate to populate vmTemplateId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  vmTemplateIdSelector:
                    description: Selector for a ServerTemplate to populate vmTemplateId.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                required:
                - osType
                - sourceServerId
                - type
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: TaskStatus defines the observed state of Task.
            properties:
              atProvider:
                properties:
                  enterpriseProjectId:
                    description: The enterprise project id of the target server.
                    type: string
                  id:
                    description: The resource ID in UUID format.
                    type: string
                  migrateSpeed:
                    description: The migration rate, in MB/s.
                    type: number
                  state:
                    description: The status of the migration task.
                    type: string
                  targetServerName:
                    description: The name of the target server.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
