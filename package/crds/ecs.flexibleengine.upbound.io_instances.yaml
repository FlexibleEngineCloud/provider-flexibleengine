---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: instances.ecs.flexibleengine.upbound.io
spec:
  group: ecs.flexibleengine.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - flexibleengine
    kind: Instance
    listKind: InstanceList
    plural: instances
    singular: instance
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: 'Instance is the Schema for the Instances API. ""page_title:
          "flexibleengine_compute_instance_v2"'
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: InstanceSpec defines the desired state of Instance
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  adminPass:
                    description: The administrative password to assign to the server.
                      Changing this changes the root password on the existing server.
                    type: string
                  autoRecovery:
                    description: Configures or deletes automatic recovery of an instance
                    type: boolean
                  availabilityZone:
                    description: The availability zone in which to create the server.
                      Changing this creates a new server.
                    type: string
                  blockDevice:
                    description: Configuration of block devices. The block_device
                      structure is documented below. Changing this creates a new server.
                      You can specify multiple block devices which will create an
                      instance with multiple disks. This configuration is very flexible,
                      so please see the following reference for more information.
                    items:
                      properties:
                        bootIndex:
                          description: The boot index of the volume. It defaults to
                            0, which indicates that it's a system disk. Changing this
                            creates a new server.
                          type: number
                        deleteOnTermination:
                          description: Delete the volume / block device upon termination
                            of the instance. Defaults to false. Changing this creates
                            a new server.
                          type: boolean
                        destinationType:
                          description: The type that gets created. Possible values
                            are "volume" and "local". Changing this creates a new
                            server.
                          type: string
                        deviceName:
                          description: A unique name for the resource.
                          type: string
                        deviceType:
                          type: string
                        diskBus:
                          description: The low-level disk bus that will be used, for
                            example, virtio, scsi. Most common thing is to leave this
                            empty. Changing this creates a new server.
                          type: string
                        guestFormat:
                          type: string
                        sourceType:
                          description: The source type of the device. Must be one
                            of "blank", "image", "volume", or "snapshot". Changing
                            this creates a new server.
                          type: string
                        uuid:
                          description: The UUID of the image, volume, or snapshot.
                            Changing this creates a new server.
                          type: string
                        volumeSize:
                          description: 'The size of the volume to create (in gigabytes).
                            Required in the following combinations: source=image and
                            destination=volume, source=blank and destination=local,
                            and source=blank and destination=volume. Changing this
                            creates a new server.'
                          type: number
                        volumeType:
                          description: Currently, the value can be SSD (ultra-I/O
                            disk type), SAS (high I/O disk type), or SATA (common
                            I/O disk type)
                          type: string
                      required:
                      - sourceType
                      type: object
                    type: array
                  configDrive:
                    description: Whether to use the config_drive feature to configure
                      the instance. Changing this creates a new server.
                    type: boolean
                  flavorId:
                    description: The flavor ID of the desired flavor for the server.
                      Changing this resizes the existing server.
                    type: string
                  flavorName:
                    description: The name of the desired flavor for the server. Changing
                      this resizes the existing server.
                    type: string
                  imageId:
                    description: The image ID of the desired image for the server.
                      Changing this creates a new server.
                    type: string
                  imageName:
                    description: The name of the desired image for the server. Changing
                      this creates a new server.
                    type: string
                  keyPair:
                    description: The name of a key pair to put on the server. The
                      key pair must already be created and associated with the tenant's
                      account. Changing this creates a new server.
                    type: string
                  keyPairRef:
                    description: Reference to a KeyPair to populate keyPair.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  keyPairSelector:
                    description: Selector for a KeyPair to populate keyPair.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  metadata:
                    additionalProperties:
                      type: string
                    description: The key/value pairs to associate with the instance.
                      Changing this updates the existing server metadata.
                    type: object
                  name:
                    description: A unique name for the resource.
                    type: string
                  network:
                    description: An array of one or more networks to attach to the
                      instance. The network object structure is documented below.
                      Changing this creates a new server.
                    items:
                      properties:
                        accessNetwork:
                          description: Specifies if this network should be used for
                            provisioning access. Accepts true or false. Defaults to
                            false.
                          type: boolean
                        fixedIpV4:
                          description: Specifies a fixed IPv4 address to be used on
                            this network. Changing this creates a new server.
                          type: string
                        fixedIpV6:
                          description: Specifies a fixed IPv6 address to be used on
                            this network. Changing this creates a new server.
                          type: string
                        name:
                          description: A unique name for the resource.
                          type: string
                        port:
                          description: The port UUID of a network to attach to the
                            server. Changing this creates a new server.
                          type: string
                        portRef:
                          description: Reference to a Port in vpc to populate port.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: Resolution specifies whether resolution
                                    of this reference is required. The default is
                                    'Required', which means the reconcile will fail
                                    if the reference cannot be resolved. 'Optional'
                                    means this reference will be a no-op if it cannot
                                    be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: Resolve specifies when this reference
                                    should be resolved. The default is 'IfNotPresent',
                                    which will attempt to resolve the reference only
                                    when the corresponding field is not present. Use
                                    'Always' to resolve the reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        portSelector:
                          description: Selector for a Port in vpc to populate port.
                          properties:
                            matchControllerRef:
                              description: MatchControllerRef ensures an object with
                                the same controller reference as the selecting object
                                is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: Resolution specifies whether resolution
                                    of this reference is required. The default is
                                    'Required', which means the reconcile will fail
                                    if the reference cannot be resolved. 'Optional'
                                    means this reference will be a no-op if it cannot
                                    be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: Resolve specifies when this reference
                                    should be resolved. The default is 'IfNotPresent',
                                    which will attempt to resolve the reference only
                                    when the corresponding field is not present. Use
                                    'Always' to resolve the reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        uuid:
                          description: The network UUID to attach to the server. Changing
                            this creates a new server.
                          type: string
                        uuidRef:
                          description: Reference to a Network in vpc to populate uuid.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: Resolution specifies whether resolution
                                    of this reference is required. The default is
                                    'Required', which means the reconcile will fail
                                    if the reference cannot be resolved. 'Optional'
                                    means this reference will be a no-op if it cannot
                                    be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: Resolve specifies when this reference
                                    should be resolved. The default is 'IfNotPresent',
                                    which will attempt to resolve the reference only
                                    when the corresponding field is not present. Use
                                    'Always' to resolve the reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        uuidSelector:
                          description: Selector for a Network in vpc to populate uuid.
                          properties:
                            matchControllerRef:
                              description: MatchControllerRef ensures an object with
                                the same controller reference as the selecting object
                                is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: Resolution specifies whether resolution
                                    of this reference is required. The default is
                                    'Required', which means the reconcile will fail
                                    if the reference cannot be resolved. 'Optional'
                                    means this reference will be a no-op if it cannot
                                    be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: Resolve specifies when this reference
                                    should be resolved. The default is 'IfNotPresent',
                                    which will attempt to resolve the reference only
                                    when the corresponding field is not present. Use
                                    'Always' to resolve the reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                      type: object
                    type: array
                  personality:
                    items:
                      properties:
                        content:
                          type: string
                        file:
                          type: string
                      required:
                      - content
                      - file
                      type: object
                    type: array
                  region:
                    description: The region in which to create the server instance.
                      If omitted, the region argument of the provider is used. Changing
                      this creates a new server.
                    type: string
                  schedulerHints:
                    description: Provide the Nova scheduler with hints on how the
                      instance should be launched. The available hints are described
                      below.
                    items:
                      properties:
                        buildNearHostIp:
                          type: string
                        dehId:
                          description: Specifies the DeH ID. This parameter takes
                            effect only when the value of tenancy is dedicated. If
                            you do not specify this parameter, the system will automatically
                            assign a DeH to you to deploy ECSs.
                          type: string
                        differentHost:
                          items:
                            type: string
                          type: array
                        group:
                          description: Specifies the anti-affinity group ID. The instance
                            will be placed into that group.
                          type: string
                        query:
                          items:
                            type: string
                          type: array
                        sameHost:
                          items:
                            type: string
                          type: array
                        targetCell:
                          type: string
                        tenancy:
                          description: Specifies whether the ECS is created on a Dedicated
                            Host (DeH) or in a shared pool (default). The value can
                            be shared or dedicated.
                          type: string
                      type: object
                    type: array
                  securityGroups:
                    description: 'An array of one or more security group names to
                      associate with the server. Changing this results in adding/removing
                      security groups from the existing server. Note: When attaching
                      the instance to networks using Ports, place the security groups
                      on the Port and not the instance.'
                    items:
                      type: string
                    type: array
                  stopBeforeDestroy:
                    description: Whether to try stop instance gracefully before destroying
                      it, thus giving chance for guest OS daemons to stop correctly.
                      If instance doesn't stop within timeout, it will be destroyed
                      anyway.
                    type: boolean
                  tags:
                    additionalProperties:
                      type: string
                    description: Specifies the key/value pairs to associate with the
                      instance.
                    type: object
                  userData:
                    description: The user data to provide when launching the instance.
                      Changing this creates a new server.
                    type: string
                required:
                - name
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: InstanceStatus defines the observed state of Instance.
            properties:
              atProvider:
                properties:
                  accessIpV4:
                    description: The first detected Fixed IPv4 address or the Floating
                      IP.
                    type: string
                  accessIpV6:
                    description: The first detected Fixed IPv6 address.
                    type: string
                  allMetadata:
                    additionalProperties:
                      type: string
                    type: object
                  floatingIp:
                    description: The EIP address that is associted to the instance.
                    type: string
                  id:
                    type: string
                  network:
                    description: An array of one or more networks to attach to the
                      instance. The network object structure is documented below.
                      Changing this creates a new server.
                    items:
                      properties:
                        mac:
                          type: string
                      type: object
                    type: array
                  status:
                    description: The status of the instance.
                    type: string
                  systemDiskId:
                    description: The system disk voume ID.
                    type: string
                  volumeAttached:
                    description: An array of one or more disks to attach to the instance.
                      The volume_attached object structure is documented below.
                    items:
                      properties:
                        bootIndex:
                          description: The volume boot index on that attachment.
                          type: number
                        pciAddress:
                          description: The volume pci address on that attachment.
                          type: string
                        size:
                          description: The volume size on that attachment.
                          type: number
                        type:
                          description: The volume type on that attachment.
                          type: string
                        uuid:
                          description: The volume id on that attachment.
                          type: string
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
