---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: hybridclusters.mrsd.flexibleengine.upbound.io
spec:
  group: mrsd.flexibleengine.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - flexibleengine
    kind: HybridCluster
    listKind: HybridClusterList
    plural: hybridclusters
    singular: hybridcluster
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: 'HybridCluster is the Schema for the HybridClusters API. ""page_title:
          "flexibleengine_mrs_hybrid_cluster_v1"'
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: HybridClusterSpec defines the desired state of HybridCluster
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  analysisCoreNodes:
                    description: Specifies the analysis core nodes information.
                    items:
                      properties:
                        dataVolumeCount:
                          description: 'Number of data disks of the node Value range:
                            0 to 10'
                          type: number
                        dataVolumeSize:
                          description: 'Data disk size of the node Value range: 100
                            GB to 32000 GB'
                          type: number
                        dataVolumeType:
                          description: Data disk storage type of the node, supporting
                            SATA and SSD currently
                          type: string
                        flavor:
                          description: Best match based on several years of commissioning
                            experience. MRS supports specifications of hosts, and
                            host specifications are determined by CPUs, memory, and
                            disks space.
                          type: string
                        nodeNumber:
                          description: Number of nodes. The value ranges from 0 to
                            500 and the default value is 0. The total number of Core
                            and Task nodes cannot exceed 500.
                          type: number
                      required:
                      - dataVolumeCount
                      - dataVolumeSize
                      - dataVolumeType
                      - flavor
                      - nodeNumber
                      type: object
                    type: array
                  analysisTaskNodes:
                    description: Specifies the analysis task nodes information.
                    items:
                      properties:
                        dataVolumeCount:
                          description: 'Number of data disks of the node Value range:
                            0 to 10'
                          type: number
                        dataVolumeSize:
                          description: 'Data disk size of the node Value range: 100
                            GB to 32000 GB'
                          type: number
                        dataVolumeType:
                          description: Data disk storage type of the node, supporting
                            SATA and SSD currently
                          type: string
                        flavor:
                          description: Best match based on several years of commissioning
                            experience. MRS supports specifications of hosts, and
                            host specifications are determined by CPUs, memory, and
                            disks space.
                          type: string
                        nodeNumber:
                          description: Number of nodes. The value ranges from 0 to
                            500 and the default value is 0. The total number of Core
                            and Task nodes cannot exceed 500.
                          type: number
                      required:
                      - dataVolumeCount
                      - dataVolumeSize
                      - dataVolumeType
                      - flavor
                      - nodeNumber
                      type: object
                    type: array
                  availableZone:
                    description: ID or Name of an available zone. Obtain the value
                      from Regions and Endpoints.
                    type: string
                  clusterAdminSecretSecretRef:
                    description: Indicates the password of the MRS Manager administrator.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  clusterName:
                    description: Cluster name, which is globally unique and contains
                      only 1 to 64 letters, digits, hyphens (-), and underscores (_).
                    type: string
                  clusterVersion:
                    description: 'Version of the clusters. Possible values are as
                      follows: MRS 1.8.9, MRS 2.0.1, MRS 2.1.0 and MRS 3.1.0-LTS.1.'
                    type: string
                  componentList:
                    description: Component name
                    items:
                      type: string
                    type: array
                  logCollection:
                    description: 'Indicates whether logs are collected when cluster
                      installation fails. 0: not collected 1: collected The default
                      value is 0. If log_collection is set to 1, OBS buckets will
                      be created to collect the MRS logs. These buckets will be charged.'
                    type: number
                  masterNodeKeyPairSecretRef:
                    description: Name of a key pair You can use a key to log in to
                      the Master node in the cluster.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  masterNodes:
                    description: Specifies the master nodes information.
                    items:
                      properties:
                        dataVolumeCount:
                          description: 'Number of data disks of the node Value range:
                            0 to 10'
                          type: number
                        dataVolumeSize:
                          description: 'Data disk size of the node Value range: 100
                            GB to 32000 GB'
                          type: number
                        dataVolumeType:
                          description: Data disk storage type of the node, supporting
                            SATA and SSD currently
                          type: string
                        flavor:
                          description: Best match based on several years of commissioning
                            experience. MRS supports specifications of hosts, and
                            host specifications are determined by CPUs, memory, and
                            disks space.
                          type: string
                        nodeNumber:
                          description: Number of nodes. The value ranges from 0 to
                            500 and the default value is 0. The total number of Core
                            and Task nodes cannot exceed 500.
                          type: number
                      required:
                      - dataVolumeCount
                      - dataVolumeSize
                      - dataVolumeType
                      - flavor
                      - nodeNumber
                      type: object
                    type: array
                  region:
                    description: Cluster region information. Obtain the value from
                      Regions and Endpoints.
                    type: string
                  safeMode:
                    description: MRS cluster running mode
                    type: number
                  securityGroupId:
                    description: Specifies the id of the security group which the
                      cluster belongs to. If this parameter is empty, MRS automatically
                      creates a security group, whose name starts with mrs_{cluster_name}.
                    type: string
                  securityGroupIdRef:
                    description: Reference to a SecurityGroup in vpc to populate securityGroupId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  securityGroupIdSelector:
                    description: Selector for a SecurityGroup in vpc to populate securityGroupId.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  streamingCoreNodes:
                    description: Specifies the streaming core nodes information.
                    items:
                      properties:
                        dataVolumeCount:
                          description: 'Number of data disks of the node Value range:
                            0 to 10'
                          type: number
                        dataVolumeSize:
                          description: 'Data disk size of the node Value range: 100
                            GB to 32000 GB'
                          type: number
                        dataVolumeType:
                          description: Data disk storage type of the node, supporting
                            SATA and SSD currently
                          type: string
                        flavor:
                          description: Best match based on several years of commissioning
                            experience. MRS supports specifications of hosts, and
                            host specifications are determined by CPUs, memory, and
                            disks space.
                          type: string
                        nodeNumber:
                          description: Number of nodes. The value ranges from 0 to
                            500 and the default value is 0. The total number of Core
                            and Task nodes cannot exceed 500.
                          type: number
                      required:
                      - dataVolumeCount
                      - dataVolumeSize
                      - dataVolumeType
                      - flavor
                      - nodeNumber
                      type: object
                    type: array
                  streamingTaskNodes:
                    description: Specifies the streaming task nodes information.
                    items:
                      properties:
                        dataVolumeCount:
                          description: 'Number of data disks of the node Value range:
                            0 to 10'
                          type: number
                        dataVolumeSize:
                          description: 'Data disk size of the node Value range: 100
                            GB to 32000 GB'
                          type: number
                        dataVolumeType:
                          description: Data disk storage type of the node, supporting
                            SATA and SSD currently
                          type: string
                        flavor:
                          description: Best match based on several years of commissioning
                            experience. MRS supports specifications of hosts, and
                            host specifications are determined by CPUs, memory, and
                            disks space.
                          type: string
                        nodeNumber:
                          description: Number of nodes. The value ranges from 0 to
                            500 and the default value is 0. The total number of Core
                            and Task nodes cannot exceed 500.
                          type: number
                      required:
                      - dataVolumeCount
                      - dataVolumeSize
                      - dataVolumeType
                      - flavor
                      - nodeNumber
                      type: object
                    type: array
                  subnetId:
                    description: Specifies the id of the subnet.
                    type: string
                  subnetIdRef:
                    description: Reference to a VPCSubnet in vpc to populate subnetId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  subnetIdSelector:
                    description: Selector for a VPCSubnet in vpc to populate subnetId.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  vpcId:
                    description: Specifies the id of the VPC.
                    type: string
                  vpcIdRef:
                    description: Reference to a VPC in vpc to populate vpcId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  vpcIdSelector:
                    description: Selector for a VPC in vpc to populate vpcId.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                required:
                - analysisCoreNodes
                - availableZone
                - clusterName
                - componentList
                - masterNodeKeyPairSecretRef
                - masterNodes
                - streamingCoreNodes
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: HybridClusterStatus defines the observed state of HybridCluster.
            properties:
              atProvider:
                properties:
                  analysisCoreNodes:
                    description: Specifies the analysis core nodes information.
                    items:
                      properties:
                        rootVolumeSize:
                          type: number
                        rootVolumeType:
                          type: string
                      type: object
                    type: array
                  analysisTaskNodes:
                    description: Specifies the analysis task nodes information.
                    items:
                      properties:
                        rootVolumeSize:
                          type: number
                        rootVolumeType:
                          type: string
                      type: object
                    type: array
                  billingType:
                    description: The value is Metered, indicating on-demand payment.
                    type: string
                  chargingStartTime:
                    description: Time when charging starts.
                    type: string
                  components:
                    items:
                      properties:
                        componentDesc:
                          description: Component description.
                          type: string
                        componentId:
                          description: Component ID. For example, component_id of
                            Hadoop is MRS 3.1.0-LTS.1_001, MRS 2.1.0_001, MRS 2.0.1_001,
                            and MRS 1.8.9_001.
                          type: string
                        componentName:
                          description: Component name.
                          type: string
                        componentVersion:
                          description: Component version.
                          type: string
                      type: object
                    type: array
                  createAt:
                    description: Cluster creation time.
                    type: string
                  externalAlternateIp:
                    description: Backup external IP address.
                    type: string
                  externalIp:
                    description: External IP address.
                    type: string
                  id:
                    description: The resource ID in UUID format.
                    type: string
                  internalIp:
                    description: Iternal IP address.
                    type: string
                  masterNodeIp:
                    description: IP address of a Master node.
                    type: string
                  masterNodes:
                    description: Specifies the master nodes information.
                    items:
                      properties:
                        rootVolumeSize:
                          type: number
                        rootVolumeType:
                          type: string
                      type: object
                    type: array
                  privateIpFirst:
                    description: Primary private IP address.
                    type: string
                  state:
                    description: Cluster creation fee, which is automatically calculated.
                    type: string
                  streamingCoreNodes:
                    description: Specifies the streaming core nodes information.
                    items:
                      properties:
                        rootVolumeSize:
                          type: number
                        rootVolumeType:
                          type: string
                      type: object
                    type: array
                  streamingTaskNodes:
                    description: Specifies the streaming task nodes information.
                    items:
                      properties:
                        rootVolumeSize:
                          type: number
                        rootVolumeType:
                          type: string
                      type: object
                    type: array
                  totalNodeNumber:
                    description: Total node number.
                    type: number
                  updateAt:
                    description: Cluster update time.
                    type: string
                  vnc:
                    description: URI address for remote login of the elastic cloud
                      server.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
