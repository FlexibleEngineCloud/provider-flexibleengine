---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: nodes.cce.flexibleengine.upbound.io
spec:
  group: cce.flexibleengine.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - flexibleengine
    kind: Node
    listKind: NodeList
    plural: nodes
    singular: node
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: 'Node is the Schema for the Nodes API. ""page_title: "flexibleengine_cce_node_v3"'
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: NodeSpec defines the desired state of Node
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: Node annotation, key/value pair format. Changing
                      this parameter will create a new resource.
                    type: object
                  availabilityZone:
                    description: specify the name of the available partition (AZ).
                      Changing this parameter will create a new resource.
                    type: string
                  bandwidthChargeMode:
                    description: Bandwidth billing type. Changing this parameter will
                      create a new resource.
                    type: string
                  bandwidthSize:
                    description: Bandwidth size. Changing this parameter will create
                      a new resource.
                    type: number
                  billingMode:
                    type: number
                  clusterId:
                    description: ID of the cluster. Changing this parameter will create
                      a new resource.
                    type: string
                  dataVolumes:
                    description: Represents the data disk to be created. Changing
                      this parameter will create a new resource.
                    items:
                      properties:
                        extendParams:
                          additionalProperties:
                            type: string
                          description: Specifies the disk expansion parameters in
                            key/value pair format.
                          type: object
                        kmsKeyId:
                          description: Specifies the ID of a KMS key. This is used
                            to encrypt the volume.
                          type: string
                        size:
                          description: Specifies the disk size in GB.
                          type: number
                        volumetype:
                          description: Specifies the disk type.
                          type: string
                      required:
                      - size
                      - volumetype
                      type: object
                    type: array
                  ecsPerformanceType:
                    description: Classification of cloud server specifications. Changing
                      this parameter will create a new resource.
                    type: string
                  eipCount:
                    description: Number of elastic IPs to be dynamically created.
                      Changing this parameter will create a new resource.
                    type: number
                  eipIds:
                    description: List of existing elastic IP IDs. Changing this parameter
                      will create a new resource.
                    items:
                      type: string
                    type: array
                  extendParam:
                    additionalProperties:
                      type: string
                    description: 'Extended parameter. Changing this parameter will
                      create a new resource. Availiable keys:'
                    type: object
                  extendParamChargingMode:
                    type: number
                  flavorId:
                    description: Specifies the flavor id. Changing this parameter
                      will create a new resource.
                    type: string
                  iptype:
                    description: Elastic IP type.
                    type: string
                  keyPair:
                    description: Key pair name when logging in to select the key pair
                      mode. Changing this parameter will create a new resource.
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: Tags of a Kubernetes node, key/value pair format.
                      Changing this parameter will create a new resource.
                    type: object
                  maxPods:
                    description: The maximum number of instances a node is allowed
                      to create. Changing this parameter will create a new resource.
                    type: number
                  name:
                    description: Node Name.
                    type: string
                  orderId:
                    description: The resource ID in UUID format.
                    type: string
                  os:
                    description: Operating System of the node, possible values are
                      EulerOS 2.2 and CentOS 7.6. Defaults to EulerOS 2.2. Changing
                      this parameter will create a new resource.
                    type: string
                  postinstall:
                    description: Script required after installation. The input value
                      can be a Base64 encoded string or not. Changing this parameter
                      will create a new resource.
                    type: string
                  preinstall:
                    description: Script required before installation. The input value
                      can be a Base64 encoded string or not. Changing this parameter
                      will create a new resource.
                    type: string
                  productId:
                    description: The Product ID. Changing this parameter will create
                      a new resource.
                    type: string
                  publicKey:
                    description: The Public key. Changing this parameter will create
                      a new resource.
                    type: string
                  region:
                    type: string
                  rootVolume:
                    description: It corresponds to the system disk related configuration.
                      Changing this parameter will create a new resource.
                    items:
                      properties:
                        extendParams:
                          additionalProperties:
                            type: string
                          description: Specifies the disk expansion parameters in
                            key/value pair format.
                          type: object
                        size:
                          description: Specifies the disk size in GB.
                          type: number
                        volumetype:
                          description: Specifies the disk type.
                          type: string
                      required:
                      - size
                      - volumetype
                      type: object
                    type: array
                  sharetype:
                    description: Bandwidth sharing type. Changing this parameter will
                      create a new resource.
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: VM tag, key/value pair format.
                    type: object
                  taints:
                    description: 'You can add taints to created nodes to configure
                      anti-affinity. Changing this parameter will create a new resource.
                      Each taint contains the following parameters:'
                    items:
                      properties:
                        effect:
                          description: Available options are NoSchedule, PreferNoSchedule,
                            and NoExecute.
                          type: string
                        key:
                          description: A key must contain 1 to 63 characters starting
                            with a letter or digit. Only letters, digits, hyphens
                            (-), underscores (_), and periods (.) are allowed. A DNS
                            subdomain name can be used as the prefix of a key.
                          type: string
                        value:
                          description: A value must start with a letter or digit and
                            can contain a maximum of 63 characters, including letters,
                            digits, hyphens (-), underscores (_), and periods (.).
                          type: string
                      required:
                      - effect
                      - key
                      - value
                      type: object
                    type: array
                required:
                - availabilityZone
                - clusterId
                - dataVolumes
                - flavorId
                - keyPair
                - rootVolume
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: NodeStatus defines the observed state of Node.
            properties:
              atProvider:
                properties:
                  id:
                    description: The resource ID in UUID format.
                    type: string
                  privateIp:
                    description: Private IP of the CCE node.
                    type: string
                  publicIp:
                    description: Public IP of the CCE node.
                    type: string
                  serverId:
                    description: ID of the ECS instance associated with the node.
                    type: string
                  status:
                    description: Node status information.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
