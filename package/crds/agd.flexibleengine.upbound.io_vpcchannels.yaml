---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: vpcchannels.agd.flexibleengine.upbound.io
spec:
  group: agd.flexibleengine.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - flexibleengine
    kind: VPCChannel
    listKind: VPCChannelList
    plural: vpcchannels
    singular: vpcchannel
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: 'VPCChannel is the Schema for the VPCChannels API. ""page_title:
          "flexibleengine_apig_vpc_channel"'
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: VPCChannelSpec defines the desired state of VPCChannel
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  algorithm:
                    description: Specifies the type of the backend service. The valid
                      types are WRR, WLC, SH and URI hashing, default to WRR. The
                      distribution algorithm.
                    type: string
                  healthyThreshold:
                    description: Specifies the healthy threshold, which refers to
                      the number of consecutive successful checks required for a backend
                      server to be considered healthy. The valid value is range from
                      2 to 10, default to 2. The the healthy threshold, which refers
                      to the number of consecutive successful checks required for
                      a backend server to be considered healthy.
                    type: number
                  httpCode:
                    description: The response codes for determining a successful HTTP
                      response.
                    type: string
                  instanceId:
                    description: Specifies an ID of the APIG dedicated instance to
                      which the APIG vpc channel belongs to. Changing this will create
                      a new VPC channel resource. The ID of the dedicated instance
                      to which the VPC channel belongs.
                    type: string
                  instanceIdRef:
                    description: Reference to a Instance to populate instanceId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  instanceIdSelector:
                    description: Selector for a Instance to populate instanceId.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  interval:
                    description: Specifies the interval between consecutive checks,
                      in second. The valid value is range from 5 to 300, default to
                      10. The interval between consecutive checks, in second.
                    type: number
                  memberType:
                    description: Specifies the type of the backend service. The valid
                      types are ECS and EIP, default to ECS. The member type of the
                      VPC channel.
                    type: string
                  members:
                    description: Specifies an array of one or more backend server
                      IDs or IP addresses that bind the VPC channel. The object structure
                      is documented below. The configuration of the backend servers
                      that bind the VPC channel.
                    items:
                      properties:
                        id:
                          description: Specifies the ECS ID for each backend servers.
                            Required if member_type is ECS. This parameter and ip_address
                            are alternative. The ID of the backend server.
                          type: string
                        ipAddress:
                          description: Specifies the IP address each backend servers.
                            Required if member_type is EIP. The IP address of the
                            backend server.
                          type: string
                        weight:
                          description: Specifies the backend server weight. The valid
                            values are range from 1 to 100, default to 1. The weight
                            of current backend server.
                          type: number
                      type: object
                    type: array
                  name:
                    description: Specifies the name of the VPC channel. The channel
                      name consists of 3 to 64 characters, starting with a letter.
                      Only letters, digits and underscores (_) are allowed. Chinese
                      characters must be in UTF-8 or Unicode format. The name of the
                      VPC channel.
                    type: string
                  path:
                    description: Specifies the destination path for health checks.
                      Required if protocol is HTTP or HTTPS. The destination path
                      for health checks.
                    type: string
                  port:
                    description: Specifies the host port of the VPC channel. The valid
                      value is range from 1 to 65535. The host port of the VPC channel.
                    type: number
                  protocol:
                    description: Specifies the protocol for performing health checks
                      on backend servers in the VPC channel. The valid values are
                      TCP, HTTP and HTTPS, default to TCP. The rotocol for performing
                      health checks on backend servers in the VPC channel.
                    type: string
                  region:
                    description: Specifies the region in which to create the VPC channel
                      resource. If omitted, the provider-level region will be used.
                      Changing this will create a new VPC channel resource. The region
                      where the dedicated instance is located.
                    type: string
                  timeout:
                    description: Specifies the timeout for determining whether a health
                      check fails, in second. The value must be less than the value
                      of time_interval. The valid value is range from 2 to 30, default
                      to 5. The timeout for determining whether a health check fails,
                      in second.
                    type: number
                  unhealthyThreshold:
                    description: Specifies the unhealthy threshold, which refers to
                      the number of consecutive failed checks required for a backend
                      server to be considered unhealthy. The valid value is range
                      from 2 to 10, default to 5. The unhealthy threshold, which refers
                      to the number of consecutive failed checks required for a backend
                      server to be considered unhealthy.
                    type: number
                required:
                - members
                - name
                - port
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: VPCChannelStatus defines the observed state of VPCChannel.
            properties:
              atProvider:
                properties:
                  createdAt:
                    description: The time when the VPC channel was created.
                    type: string
                  id:
                    description: ID of the VPC channel.
                    type: string
                  status:
                    description: The status of VPC channel, supports Normal and Abnormal.
                      The current status of the VPC channel.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
