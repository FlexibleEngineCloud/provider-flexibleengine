/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type DestinationDBObservation struct {
}

type DestinationDBParameters struct {

	// Specifies the migration engine type.
	// Changing this parameter will create a new resource. The options are as follows:
	// +kubebuilder:validation:Required
	EngineType *string `json:"engineType" tf:"engine_type,omitempty"`

	// Specifies the IP of database. Changing this parameter will create a new resource.
	// +kubebuilder:validation:Required
	IP *string `json:"ip" tf:"ip,omitempty"`

	// Specifies the instance id of database when it is a RDS database.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Specifies the job name. The name consists of 4 to 50 characters, starting with
	// a letter. Only letters, digits, underscores (_) and hyphens (-) are allowed.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the password of database.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Required
	PasswordSecretRef v1.SecretKeySelector `json:"passwordSecretRef" tf:"-"`

	// Specifies the port of database. Changing this parameter will create a new resource.
	// +kubebuilder:validation:Required
	Port *float64 `json:"port" tf:"port,omitempty"`

	// The region in which to create the resource. If omitted, the
	// provider-level region will be used. Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies the checksum of SSL certificate content.
	// It is mandatory when ssl_enabled is true. Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	SSLCertCheckSum *string `json:"sslCertCheckSum,omitempty" tf:"ssl_cert_check_sum,omitempty"`

	// Specifies the SSL certificate content, encrypted with base64.
	// It is mandatory when ssl_enabled is true. Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	SSLCertKey *string `json:"sslCertKey,omitempty" tf:"ssl_cert_key,omitempty"`

	// Specifies SSL certificate name.
	// It is mandatory when ssl_enabled is true. Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	SSLCertName *string `json:"sslCertName,omitempty" tf:"ssl_cert_name,omitempty"`

	// Specifies SSL certificate password. It is mandatory when
	// ssl_enabled is true and the certificate file suffix is .p12. Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	SSLCertPassword *string `json:"sslCertPassword,omitempty" tf:"ssl_cert_password,omitempty"`

	// Specifies whether to enable SSL connection.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	SSLEnabled *bool `json:"sslEnabled,omitempty" tf:"ssl_enabled,omitempty"`

	// Specifies the ID of the VPC Subnet of database when it is a RDS database.
	// It is mandatory when direction is down. Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// Specifies the user name of database.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Required
	User *string `json:"user" tf:"user,omitempty"`
}

type JobObservation struct {

	// Create time. The format is ISO8601:YYYY-MM-DDThh:mm:ssZ
	CreatedAt *string `json:"createdAt,omitempty" tf:"created_at,omitempty"`

	// The resource ID in UUID format.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Private IP.
	PrivateIP *string `json:"privateIp,omitempty" tf:"private_ip,omitempty"`

	// Public IP.
	PublicIP *string `json:"publicIp,omitempty" tf:"public_ip,omitempty"`

	// Status.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`
}

type JobParameters struct {

	// Specifies the description of the job, which contain a
	// maximum of 256 characters, and certain special characters (including !<>&'"\) are not allowed.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the destination database configuration.
	// The db_info object structure of the destination_db is documented below.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Required
	DestinationDB []DestinationDBParameters `json:"destinationDb" tf:"destination_db,omitempty"`

	// Specifies the destination DB instance as read-only helps
	// ensure the migration is successful. Once the migration is complete, the DB instance automatically changes to
	// Read/Write. The default value is true. Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	DestinationDBReadnoly *bool `json:"destinationDbReadnoly,omitempty" tf:"destination_db_readnoly,omitempty"`

	// Specifies the direction of data flow.
	// Changing this parameter will create a new resource. The options are as follows:
	// +kubebuilder:validation:Required
	Direction *string `json:"direction" tf:"direction,omitempty"`

	// Specifies the migration engine type.
	// Changing this parameter will create a new resource. The options are as follows:
	// +kubebuilder:validation:Required
	EngineType *string `json:"engineType" tf:"engine_type,omitempty"`

	// Specifies the enterprise project id.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	EnterpriseProjectID *string `json:"enterpriseProjectId,omitempty" tf:"enterprise_project_id,omitempty"`

	// Specifies how many days after the task is abnormal, it will automatically
	// end. The value ranges from 14 to 100. the default value is 14. Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	ExpiredDays *float64 `json:"expiredDays,omitempty" tf:"expired_days,omitempty"`

	// Specifies whether to forcibly destroy the job even if it is running.
	// The default value is false.
	// +kubebuilder:validation:Optional
	ForceDestroy *bool `json:"forceDestroy,omitempty" tf:"force_destroy,omitempty"`

	// Specifies the migration speed by setting a time period.
	// The default is no speed limit. The maximum length is 3. Structure is documented below.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	LimitSpeed []LimitSpeedParameters `json:"limitSpeed,omitempty" tf:"limit_speed,omitempty"`

	// Specifies whether to migrate the definers of all source database
	// objects to the user of destination_db. The default value is true.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	MigrateDefiner *bool `json:"migrateDefiner,omitempty" tf:"migrate_definer,omitempty"`

	// Specifies migration type.
	// Changing this parameter will create a new resource. The options are as follows:
	// +kubebuilder:validation:Optional
	MigrationType *string `json:"migrationType,omitempty" tf:"migration_type,omitempty"`

	// Specifies whether to enable multi write. It is mandatory when type
	// is cloudDataGuard. When the disaster recovery type is dual-active disaster recovery, set multi_write to true,
	// otherwise to false. The default value is false. Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	MultiWrite *bool `json:"multiWrite,omitempty" tf:"multi_write,omitempty"`

	// Specifies the job name. The name consists of 4 to 50 characters, starting with
	// a letter. Only letters, digits, underscores (_) and hyphens (-) are allowed.
	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// Specifies the network type.
	// Changing this parameter will create a new resource. The options are as follows:
	// +kubebuilder:validation:Optional
	NetType *string `json:"netType,omitempty" tf:"net_type,omitempty"`

	// The region in which to create the resource. If omitted, the
	// provider-level region will be used. Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies the source database configuration.
	// The db_info object structure of the source_db is documented below.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Required
	SourceDB []SourceDBParameters `json:"sourceDb" tf:"source_db,omitempty"`

	// Specifies the time to start the job. The time format
	// is yyyy-MM-dd HH:mm:ss. Start immediately by default. Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	StartTime *string `json:"startTime,omitempty" tf:"start_time,omitempty"`

	// Specifies the key/value pairs to associate with the DRS job.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Specifies the job type. Changing this parameter will create a new
	// resource. The options are as follows:
	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

type LimitSpeedObservation struct {
}

type LimitSpeedParameters struct {

	// Specifies the time to end speed limit, this time is UTC time. The input must
	// end at 59 minutes, the format is hh:mm, for example: 15:59. Changing this parameter will create a new resource.
	// +kubebuilder:validation:Required
	EndTime *string `json:"endTime" tf:"end_time,omitempty"`

	// Specifies the transmission speed, the value range is 1 to 9999, unit: MB/s.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Required
	Speed *string `json:"speed" tf:"speed,omitempty"`

	// Specifies the time to start speed limit, this time is UTC time. The start
	// time is the whole hour, if there is a minute, it will be ignored, the format is hh:mm, and the hour number
	// is two digits, for example: 01:00. Changing this parameter will create a new resource.
	// +kubebuilder:validation:Required
	StartTime *string `json:"startTime" tf:"start_time,omitempty"`
}

type SourceDBObservation struct {
}

type SourceDBParameters struct {

	// Specifies the migration engine type.
	// Changing this parameter will create a new resource. The options are as follows:
	// +kubebuilder:validation:Required
	EngineType *string `json:"engineType" tf:"engine_type,omitempty"`

	// Specifies the IP of database. Changing this parameter will create a new resource.
	// +kubebuilder:validation:Required
	IP *string `json:"ip" tf:"ip,omitempty"`

	// Specifies the instance id of database when it is a RDS database.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Specifies the job name. The name consists of 4 to 50 characters, starting with
	// a letter. Only letters, digits, underscores (_) and hyphens (-) are allowed.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the password of database.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Required
	PasswordSecretRef v1.SecretKeySelector `json:"passwordSecretRef" tf:"-"`

	// Specifies the port of database. Changing this parameter will create a new resource.
	// +kubebuilder:validation:Required
	Port *float64 `json:"port" tf:"port,omitempty"`

	// The region in which to create the resource. If omitted, the
	// provider-level region will be used. Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies the checksum of SSL certificate content.
	// It is mandatory when ssl_enabled is true. Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	SSLCertCheckSum *string `json:"sslCertCheckSum,omitempty" tf:"ssl_cert_check_sum,omitempty"`

	// Specifies the SSL certificate content, encrypted with base64.
	// It is mandatory when ssl_enabled is true. Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	SSLCertKey *string `json:"sslCertKey,omitempty" tf:"ssl_cert_key,omitempty"`

	// Specifies SSL certificate name.
	// It is mandatory when ssl_enabled is true. Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	SSLCertName *string `json:"sslCertName,omitempty" tf:"ssl_cert_name,omitempty"`

	// Specifies SSL certificate password. It is mandatory when
	// ssl_enabled is true and the certificate file suffix is .p12. Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	SSLCertPassword *string `json:"sslCertPassword,omitempty" tf:"ssl_cert_password,omitempty"`

	// Specifies whether to enable SSL connection.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	SSLEnabled *bool `json:"sslEnabled,omitempty" tf:"ssl_enabled,omitempty"`

	// Specifies the ID of the VPC Subnet of database when it is a RDS database.
	// It is mandatory when direction is down. Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// Specifies the user name of database.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Required
	User *string `json:"user" tf:"user,omitempty"`
}

// JobSpec defines the desired state of Job
type JobSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     JobParameters `json:"forProvider"`
}

// JobStatus defines the observed state of Job.
type JobStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        JobObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// Job is the Schema for the Jobs API. ""page_title: "flexibleengine_drs_job"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,flexibleengine}
type Job struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              JobSpec   `json:"spec"`
	Status            JobStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// JobList contains a list of Jobs
type JobList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Job `json:"items"`
}

// Repository type metadata.
var (
	Job_Kind             = "Job"
	Job_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Job_Kind}.String()
	Job_KindAPIVersion   = Job_Kind + "." + CRDGroupVersion.String()
	Job_GroupVersionKind = CRDGroupVersion.WithKind(Job_Kind)
)

func init() {
	SchemeBuilder.Register(&Job{}, &JobList{})
}
