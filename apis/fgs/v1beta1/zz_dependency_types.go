/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type DependencyObservation struct {

	// The unique ID of the dependency package.
	Etag *string `json:"etag,omitempty" tf:"etag,omitempty"`

	// The dependency ID in UUID format.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The base64 encoded digest of the dependency after encryption by MD5.
	Owner *string `json:"owner,omitempty" tf:"owner,omitempty"`

	// The dependency package size in bytes.
	Size *float64 `json:"size,omitempty" tf:"size,omitempty"`
}

type DependencyParameters struct {

	// Specifies the dependency description.
	// The description can contain a maximum of 512 characters.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the OBS bucket path where the dependency package is located.oss.eu-west-0.prod-cloud-ocb.orange-business.com/dependencies/sdkcore.zip'.
	// +kubebuilder:validation:Required
	Link *string `json:"link" tf:"link,omitempty"`

	// Specifies the dependeny name.
	// The name can contain a maximum of 96 characters and must start with a letter and end with a letter or digit.
	// Only letters, digits, underscores (_), periods (.), and hyphens (-) are allowed.
	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// Specifies the region in which to create a custom dependency package.
	// If omitted, the provider-level region will be used. Changing this will create a new resource.
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies the dependency package runtime.
	// The valid values are Java8, Node.js6.10, Node.js8.10, Node.js10.16, Node.js12.13, Python2.7,
	// Python3.6, Go1.8, Go1.x, C#(.NET Core 2.0), C#(.NET Core 2.1), C#(.NET Core 3.1) and
	// PHP7.3.
	// +kubebuilder:validation:Required
	Runtime *string `json:"runtime" tf:"runtime,omitempty"`
}

// DependencySpec defines the desired state of Dependency
type DependencySpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     DependencyParameters `json:"forProvider"`
}

// DependencyStatus defines the observed state of Dependency.
type DependencyStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        DependencyObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// Dependency is the Schema for the Dependencys API. ""page_title: "flexibleengine_fgs_dependency"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,flexibleengine}
type Dependency struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              DependencySpec   `json:"spec"`
	Status            DependencyStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// DependencyList contains a list of Dependencys
type DependencyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Dependency `json:"items"`
}

// Repository type metadata.
var (
	Dependency_Kind             = "Dependency"
	Dependency_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Dependency_Kind}.String()
	Dependency_KindAPIVersion   = Dependency_Kind + "." + CRDGroupVersion.String()
	Dependency_GroupVersionKind = CRDGroupVersion.WithKind(Dependency_Kind)
)

func init() {
	SchemeBuilder.Register(&Dependency{}, &DependencyList{})
}
