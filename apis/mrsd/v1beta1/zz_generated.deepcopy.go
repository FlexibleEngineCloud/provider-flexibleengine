//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AddJobsObservation) DeepCopyInto(out *AddJobsObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AddJobsObservation.
func (in *AddJobsObservation) DeepCopy() *AddJobsObservation {
	if in == nil {
		return nil
	}
	out := new(AddJobsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AddJobsParameters) DeepCopyInto(out *AddJobsParameters) {
	*out = *in
	if in.Arguments != nil {
		in, out := &in.Arguments, &out.Arguments
		*out = new(string)
		**out = **in
	}
	if in.FileAction != nil {
		in, out := &in.FileAction, &out.FileAction
		*out = new(string)
		**out = **in
	}
	if in.HiveScriptPath != nil {
		in, out := &in.HiveScriptPath, &out.HiveScriptPath
		*out = new(string)
		**out = **in
	}
	if in.Hql != nil {
		in, out := &in.Hql, &out.Hql
		*out = new(string)
		**out = **in
	}
	if in.Input != nil {
		in, out := &in.Input, &out.Input
		*out = new(string)
		**out = **in
	}
	if in.JarPath != nil {
		in, out := &in.JarPath, &out.JarPath
		*out = new(string)
		**out = **in
	}
	if in.JobLog != nil {
		in, out := &in.JobLog, &out.JobLog
		*out = new(string)
		**out = **in
	}
	if in.JobName != nil {
		in, out := &in.JobName, &out.JobName
		*out = new(string)
		**out = **in
	}
	if in.JobType != nil {
		in, out := &in.JobType, &out.JobType
		*out = new(float64)
		**out = **in
	}
	if in.Output != nil {
		in, out := &in.Output, &out.Output
		*out = new(string)
		**out = **in
	}
	if in.ShutdownCluster != nil {
		in, out := &in.ShutdownCluster, &out.ShutdownCluster
		*out = new(bool)
		**out = **in
	}
	if in.SubmitJobOnceClusterRun != nil {
		in, out := &in.SubmitJobOnceClusterRun, &out.SubmitJobOnceClusterRun
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AddJobsParameters.
func (in *AddJobsParameters) DeepCopy() *AddJobsParameters {
	if in == nil {
		return nil
	}
	out := new(AddJobsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnalysisCoreNodesObservation) DeepCopyInto(out *AnalysisCoreNodesObservation) {
	*out = *in
	if in.RootVolumeSize != nil {
		in, out := &in.RootVolumeSize, &out.RootVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.RootVolumeType != nil {
		in, out := &in.RootVolumeType, &out.RootVolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnalysisCoreNodesObservation.
func (in *AnalysisCoreNodesObservation) DeepCopy() *AnalysisCoreNodesObservation {
	if in == nil {
		return nil
	}
	out := new(AnalysisCoreNodesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnalysisCoreNodesParameters) DeepCopyInto(out *AnalysisCoreNodesParameters) {
	*out = *in
	if in.DataVolumeCount != nil {
		in, out := &in.DataVolumeCount, &out.DataVolumeCount
		*out = new(float64)
		**out = **in
	}
	if in.DataVolumeSize != nil {
		in, out := &in.DataVolumeSize, &out.DataVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.DataVolumeType != nil {
		in, out := &in.DataVolumeType, &out.DataVolumeType
		*out = new(string)
		**out = **in
	}
	if in.Flavor != nil {
		in, out := &in.Flavor, &out.Flavor
		*out = new(string)
		**out = **in
	}
	if in.NodeNumber != nil {
		in, out := &in.NodeNumber, &out.NodeNumber
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnalysisCoreNodesParameters.
func (in *AnalysisCoreNodesParameters) DeepCopy() *AnalysisCoreNodesParameters {
	if in == nil {
		return nil
	}
	out := new(AnalysisCoreNodesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnalysisTaskNodesObservation) DeepCopyInto(out *AnalysisTaskNodesObservation) {
	*out = *in
	if in.RootVolumeSize != nil {
		in, out := &in.RootVolumeSize, &out.RootVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.RootVolumeType != nil {
		in, out := &in.RootVolumeType, &out.RootVolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnalysisTaskNodesObservation.
func (in *AnalysisTaskNodesObservation) DeepCopy() *AnalysisTaskNodesObservation {
	if in == nil {
		return nil
	}
	out := new(AnalysisTaskNodesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnalysisTaskNodesParameters) DeepCopyInto(out *AnalysisTaskNodesParameters) {
	*out = *in
	if in.DataVolumeCount != nil {
		in, out := &in.DataVolumeCount, &out.DataVolumeCount
		*out = new(float64)
		**out = **in
	}
	if in.DataVolumeSize != nil {
		in, out := &in.DataVolumeSize, &out.DataVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.DataVolumeType != nil {
		in, out := &in.DataVolumeType, &out.DataVolumeType
		*out = new(string)
		**out = **in
	}
	if in.Flavor != nil {
		in, out := &in.Flavor, &out.Flavor
		*out = new(string)
		**out = **in
	}
	if in.NodeNumber != nil {
		in, out := &in.NodeNumber, &out.NodeNumber
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnalysisTaskNodesParameters.
func (in *AnalysisTaskNodesParameters) DeepCopy() *AnalysisTaskNodesParameters {
	if in == nil {
		return nil
	}
	out := new(AnalysisTaskNodesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster) DeepCopyInto(out *Cluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster.
func (in *Cluster) DeepCopy() *Cluster {
	if in == nil {
		return nil
	}
	out := new(Cluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Cluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterList) DeepCopyInto(out *ClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Cluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterList.
func (in *ClusterList) DeepCopy() *ClusterList {
	if in == nil {
		return nil
	}
	out := new(ClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterObservation) DeepCopyInto(out *ClusterObservation) {
	*out = *in
	if in.AvailableZoneName != nil {
		in, out := &in.AvailableZoneName, &out.AvailableZoneName
		*out = new(string)
		**out = **in
	}
	if in.ChargingStartTime != nil {
		in, out := &in.ChargingStartTime, &out.ChargingStartTime
		*out = new(string)
		**out = **in
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterState != nil {
		in, out := &in.ClusterState, &out.ClusterState
		*out = new(string)
		**out = **in
	}
	if in.ComponentList != nil {
		in, out := &in.ComponentList, &out.ComponentList
		*out = make([]ComponentListObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CoreNodeProductID != nil {
		in, out := &in.CoreNodeProductID, &out.CoreNodeProductID
		*out = new(string)
		**out = **in
	}
	if in.CoreNodeSpecID != nil {
		in, out := &in.CoreNodeSpecID, &out.CoreNodeSpecID
		*out = new(string)
		**out = **in
	}
	if in.CreateAt != nil {
		in, out := &in.CreateAt, &out.CreateAt
		*out = new(string)
		**out = **in
	}
	if in.DeploymentID != nil {
		in, out := &in.DeploymentID, &out.DeploymentID
		*out = new(string)
		**out = **in
	}
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
	if in.ErrorInfo != nil {
		in, out := &in.ErrorInfo, &out.ErrorInfo
		*out = new(string)
		**out = **in
	}
	if in.ExternalAlternateIP != nil {
		in, out := &in.ExternalAlternateIP, &out.ExternalAlternateIP
		*out = new(string)
		**out = **in
	}
	if in.ExternalIP != nil {
		in, out := &in.ExternalIP, &out.ExternalIP
		*out = new(string)
		**out = **in
	}
	if in.Fee != nil {
		in, out := &in.Fee, &out.Fee
		*out = new(string)
		**out = **in
	}
	if in.HadoopVersion != nil {
		in, out := &in.HadoopVersion, &out.HadoopVersion
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.InternalIP != nil {
		in, out := &in.InternalIP, &out.InternalIP
		*out = new(string)
		**out = **in
	}
	if in.MasterNodeIP != nil {
		in, out := &in.MasterNodeIP, &out.MasterNodeIP
		*out = new(string)
		**out = **in
	}
	if in.MasterNodeProductID != nil {
		in, out := &in.MasterNodeProductID, &out.MasterNodeProductID
		*out = new(string)
		**out = **in
	}
	if in.MasterNodeSpecID != nil {
		in, out := &in.MasterNodeSpecID, &out.MasterNodeSpecID
		*out = new(string)
		**out = **in
	}
	if in.OrderID != nil {
		in, out := &in.OrderID, &out.OrderID
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPFirst != nil {
		in, out := &in.PrivateIPFirst, &out.PrivateIPFirst
		*out = new(string)
		**out = **in
	}
	if in.Remark != nil {
		in, out := &in.Remark, &out.Remark
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupsID != nil {
		in, out := &in.SecurityGroupsID, &out.SecurityGroupsID
		*out = new(string)
		**out = **in
	}
	if in.SlaveSecurityGroupsID != nil {
		in, out := &in.SlaveSecurityGroupsID, &out.SlaveSecurityGroupsID
		*out = new(string)
		**out = **in
	}
	if in.TenantID != nil {
		in, out := &in.TenantID, &out.TenantID
		*out = new(string)
		**out = **in
	}
	if in.UpdateAt != nil {
		in, out := &in.UpdateAt, &out.UpdateAt
		*out = new(string)
		**out = **in
	}
	if in.Vnc != nil {
		in, out := &in.Vnc, &out.Vnc
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterObservation.
func (in *ClusterObservation) DeepCopy() *ClusterObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterParameters) DeepCopyInto(out *ClusterParameters) {
	*out = *in
	if in.AddJobs != nil {
		in, out := &in.AddJobs, &out.AddJobs
		*out = make([]AddJobsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailableZoneID != nil {
		in, out := &in.AvailableZoneID, &out.AvailableZoneID
		*out = new(string)
		**out = **in
	}
	if in.BillingType != nil {
		in, out := &in.BillingType, &out.BillingType
		*out = new(float64)
		**out = **in
	}
	if in.ClusterAdminSecretSecretRef != nil {
		in, out := &in.ClusterAdminSecretSecretRef, &out.ClusterAdminSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.ClusterType != nil {
		in, out := &in.ClusterType, &out.ClusterType
		*out = new(float64)
		**out = **in
	}
	if in.ClusterVersion != nil {
		in, out := &in.ClusterVersion, &out.ClusterVersion
		*out = new(string)
		**out = **in
	}
	if in.ComponentList != nil {
		in, out := &in.ComponentList, &out.ComponentList
		*out = make([]ComponentListParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CoreNodeNum != nil {
		in, out := &in.CoreNodeNum, &out.CoreNodeNum
		*out = new(float64)
		**out = **in
	}
	if in.CoreNodeSize != nil {
		in, out := &in.CoreNodeSize, &out.CoreNodeSize
		*out = new(string)
		**out = **in
	}
	if in.LogCollection != nil {
		in, out := &in.LogCollection, &out.LogCollection
		*out = new(float64)
		**out = **in
	}
	if in.MasterNodeNum != nil {
		in, out := &in.MasterNodeNum, &out.MasterNodeNum
		*out = new(float64)
		**out = **in
	}
	if in.MasterNodeSize != nil {
		in, out := &in.MasterNodeSize, &out.MasterNodeSize
		*out = new(string)
		**out = **in
	}
	if in.NodePublicCertName != nil {
		in, out := &in.NodePublicCertName, &out.NodePublicCertName
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SafeMode != nil {
		in, out := &in.SafeMode, &out.SafeMode
		*out = new(float64)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VolumeSize != nil {
		in, out := &in.VolumeSize, &out.VolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.VolumeType != nil {
		in, out := &in.VolumeType, &out.VolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterParameters.
func (in *ClusterParameters) DeepCopy() *ClusterParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSpec) DeepCopyInto(out *ClusterSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSpec.
func (in *ClusterSpec) DeepCopy() *ClusterSpec {
	if in == nil {
		return nil
	}
	out := new(ClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterStatus) DeepCopyInto(out *ClusterStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterStatus.
func (in *ClusterStatus) DeepCopy() *ClusterStatus {
	if in == nil {
		return nil
	}
	out := new(ClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComponentListObservation) DeepCopyInto(out *ComponentListObservation) {
	*out = *in
	if in.ComponentDesc != nil {
		in, out := &in.ComponentDesc, &out.ComponentDesc
		*out = new(string)
		**out = **in
	}
	if in.ComponentID != nil {
		in, out := &in.ComponentID, &out.ComponentID
		*out = new(string)
		**out = **in
	}
	if in.ComponentVersion != nil {
		in, out := &in.ComponentVersion, &out.ComponentVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComponentListObservation.
func (in *ComponentListObservation) DeepCopy() *ComponentListObservation {
	if in == nil {
		return nil
	}
	out := new(ComponentListObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComponentListParameters) DeepCopyInto(out *ComponentListParameters) {
	*out = *in
	if in.ComponentName != nil {
		in, out := &in.ComponentName, &out.ComponentName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComponentListParameters.
func (in *ComponentListParameters) DeepCopy() *ComponentListParameters {
	if in == nil {
		return nil
	}
	out := new(ComponentListParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComponentsObservation) DeepCopyInto(out *ComponentsObservation) {
	*out = *in
	if in.ComponentDesc != nil {
		in, out := &in.ComponentDesc, &out.ComponentDesc
		*out = new(string)
		**out = **in
	}
	if in.ComponentID != nil {
		in, out := &in.ComponentID, &out.ComponentID
		*out = new(string)
		**out = **in
	}
	if in.ComponentName != nil {
		in, out := &in.ComponentName, &out.ComponentName
		*out = new(string)
		**out = **in
	}
	if in.ComponentVersion != nil {
		in, out := &in.ComponentVersion, &out.ComponentVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComponentsObservation.
func (in *ComponentsObservation) DeepCopy() *ComponentsObservation {
	if in == nil {
		return nil
	}
	out := new(ComponentsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComponentsParameters) DeepCopyInto(out *ComponentsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComponentsParameters.
func (in *ComponentsParameters) DeepCopy() *ComponentsParameters {
	if in == nil {
		return nil
	}
	out := new(ComponentsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HybridCluster) DeepCopyInto(out *HybridCluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HybridCluster.
func (in *HybridCluster) DeepCopy() *HybridCluster {
	if in == nil {
		return nil
	}
	out := new(HybridCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *HybridCluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HybridClusterList) DeepCopyInto(out *HybridClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]HybridCluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HybridClusterList.
func (in *HybridClusterList) DeepCopy() *HybridClusterList {
	if in == nil {
		return nil
	}
	out := new(HybridClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *HybridClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HybridClusterObservation) DeepCopyInto(out *HybridClusterObservation) {
	*out = *in
	if in.AnalysisCoreNodes != nil {
		in, out := &in.AnalysisCoreNodes, &out.AnalysisCoreNodes
		*out = make([]AnalysisCoreNodesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AnalysisTaskNodes != nil {
		in, out := &in.AnalysisTaskNodes, &out.AnalysisTaskNodes
		*out = make([]AnalysisTaskNodesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BillingType != nil {
		in, out := &in.BillingType, &out.BillingType
		*out = new(string)
		**out = **in
	}
	if in.ChargingStartTime != nil {
		in, out := &in.ChargingStartTime, &out.ChargingStartTime
		*out = new(string)
		**out = **in
	}
	if in.Components != nil {
		in, out := &in.Components, &out.Components
		*out = make([]ComponentsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreateAt != nil {
		in, out := &in.CreateAt, &out.CreateAt
		*out = new(string)
		**out = **in
	}
	if in.ExternalAlternateIP != nil {
		in, out := &in.ExternalAlternateIP, &out.ExternalAlternateIP
		*out = new(string)
		**out = **in
	}
	if in.ExternalIP != nil {
		in, out := &in.ExternalIP, &out.ExternalIP
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InternalIP != nil {
		in, out := &in.InternalIP, &out.InternalIP
		*out = new(string)
		**out = **in
	}
	if in.MasterNodeIP != nil {
		in, out := &in.MasterNodeIP, &out.MasterNodeIP
		*out = new(string)
		**out = **in
	}
	if in.MasterNodes != nil {
		in, out := &in.MasterNodes, &out.MasterNodes
		*out = make([]MasterNodesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrivateIPFirst != nil {
		in, out := &in.PrivateIPFirst, &out.PrivateIPFirst
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.StreamingCoreNodes != nil {
		in, out := &in.StreamingCoreNodes, &out.StreamingCoreNodes
		*out = make([]StreamingCoreNodesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StreamingTaskNodes != nil {
		in, out := &in.StreamingTaskNodes, &out.StreamingTaskNodes
		*out = make([]StreamingTaskNodesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TotalNodeNumber != nil {
		in, out := &in.TotalNodeNumber, &out.TotalNodeNumber
		*out = new(float64)
		**out = **in
	}
	if in.UpdateAt != nil {
		in, out := &in.UpdateAt, &out.UpdateAt
		*out = new(string)
		**out = **in
	}
	if in.Vnc != nil {
		in, out := &in.Vnc, &out.Vnc
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HybridClusterObservation.
func (in *HybridClusterObservation) DeepCopy() *HybridClusterObservation {
	if in == nil {
		return nil
	}
	out := new(HybridClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HybridClusterParameters) DeepCopyInto(out *HybridClusterParameters) {
	*out = *in
	if in.AnalysisCoreNodes != nil {
		in, out := &in.AnalysisCoreNodes, &out.AnalysisCoreNodes
		*out = make([]AnalysisCoreNodesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AnalysisTaskNodes != nil {
		in, out := &in.AnalysisTaskNodes, &out.AnalysisTaskNodes
		*out = make([]AnalysisTaskNodesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailableZone != nil {
		in, out := &in.AvailableZone, &out.AvailableZone
		*out = new(string)
		**out = **in
	}
	if in.ClusterAdminSecretSecretRef != nil {
		in, out := &in.ClusterAdminSecretSecretRef, &out.ClusterAdminSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.ClusterVersion != nil {
		in, out := &in.ClusterVersion, &out.ClusterVersion
		*out = new(string)
		**out = **in
	}
	if in.ComponentList != nil {
		in, out := &in.ComponentList, &out.ComponentList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LogCollection != nil {
		in, out := &in.LogCollection, &out.LogCollection
		*out = new(float64)
		**out = **in
	}
	if in.MasterNodeKeyPair != nil {
		in, out := &in.MasterNodeKeyPair, &out.MasterNodeKeyPair
		*out = new(string)
		**out = **in
	}
	if in.MasterNodes != nil {
		in, out := &in.MasterNodes, &out.MasterNodes
		*out = make([]MasterNodesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SafeMode != nil {
		in, out := &in.SafeMode, &out.SafeMode
		*out = new(float64)
		**out = **in
	}
	if in.SecurityGroupID != nil {
		in, out := &in.SecurityGroupID, &out.SecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupIDRef != nil {
		in, out := &in.SecurityGroupIDRef, &out.SecurityGroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityGroupIDSelector != nil {
		in, out := &in.SecurityGroupIDSelector, &out.SecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StreamingCoreNodes != nil {
		in, out := &in.StreamingCoreNodes, &out.StreamingCoreNodes
		*out = make([]StreamingCoreNodesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StreamingTaskNodes != nil {
		in, out := &in.StreamingTaskNodes, &out.StreamingTaskNodes
		*out = make([]StreamingTaskNodesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HybridClusterParameters.
func (in *HybridClusterParameters) DeepCopy() *HybridClusterParameters {
	if in == nil {
		return nil
	}
	out := new(HybridClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HybridClusterSpec) DeepCopyInto(out *HybridClusterSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HybridClusterSpec.
func (in *HybridClusterSpec) DeepCopy() *HybridClusterSpec {
	if in == nil {
		return nil
	}
	out := new(HybridClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HybridClusterStatus) DeepCopyInto(out *HybridClusterStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HybridClusterStatus.
func (in *HybridClusterStatus) DeepCopy() *HybridClusterStatus {
	if in == nil {
		return nil
	}
	out := new(HybridClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Job) DeepCopyInto(out *Job) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Job.
func (in *Job) DeepCopy() *Job {
	if in == nil {
		return nil
	}
	out := new(Job)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Job) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobList) DeepCopyInto(out *JobList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Job, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobList.
func (in *JobList) DeepCopy() *JobList {
	if in == nil {
		return nil
	}
	out := new(JobList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *JobList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobObservation) DeepCopyInto(out *JobObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.JobState != nil {
		in, out := &in.JobState, &out.JobState
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobObservation.
func (in *JobObservation) DeepCopy() *JobObservation {
	if in == nil {
		return nil
	}
	out := new(JobObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobParameters) DeepCopyInto(out *JobParameters) {
	*out = *in
	if in.Arguments != nil {
		in, out := &in.Arguments, &out.Arguments
		*out = new(string)
		**out = **in
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.HiveScriptPath != nil {
		in, out := &in.HiveScriptPath, &out.HiveScriptPath
		*out = new(string)
		**out = **in
	}
	if in.Input != nil {
		in, out := &in.Input, &out.Input
		*out = new(string)
		**out = **in
	}
	if in.IsProtected != nil {
		in, out := &in.IsProtected, &out.IsProtected
		*out = new(bool)
		**out = **in
	}
	if in.IsPublic != nil {
		in, out := &in.IsPublic, &out.IsPublic
		*out = new(bool)
		**out = **in
	}
	if in.JarPath != nil {
		in, out := &in.JarPath, &out.JarPath
		*out = new(string)
		**out = **in
	}
	if in.JobLog != nil {
		in, out := &in.JobLog, &out.JobLog
		*out = new(string)
		**out = **in
	}
	if in.JobName != nil {
		in, out := &in.JobName, &out.JobName
		*out = new(string)
		**out = **in
	}
	if in.JobType != nil {
		in, out := &in.JobType, &out.JobType
		*out = new(float64)
		**out = **in
	}
	if in.Output != nil {
		in, out := &in.Output, &out.Output
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobParameters.
func (in *JobParameters) DeepCopy() *JobParameters {
	if in == nil {
		return nil
	}
	out := new(JobParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobSpec) DeepCopyInto(out *JobSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobSpec.
func (in *JobSpec) DeepCopy() *JobSpec {
	if in == nil {
		return nil
	}
	out := new(JobSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobStatus) DeepCopyInto(out *JobStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobStatus.
func (in *JobStatus) DeepCopy() *JobStatus {
	if in == nil {
		return nil
	}
	out := new(JobStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MasterNodesObservation) DeepCopyInto(out *MasterNodesObservation) {
	*out = *in
	if in.RootVolumeSize != nil {
		in, out := &in.RootVolumeSize, &out.RootVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.RootVolumeType != nil {
		in, out := &in.RootVolumeType, &out.RootVolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MasterNodesObservation.
func (in *MasterNodesObservation) DeepCopy() *MasterNodesObservation {
	if in == nil {
		return nil
	}
	out := new(MasterNodesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MasterNodesParameters) DeepCopyInto(out *MasterNodesParameters) {
	*out = *in
	if in.DataVolumeCount != nil {
		in, out := &in.DataVolumeCount, &out.DataVolumeCount
		*out = new(float64)
		**out = **in
	}
	if in.DataVolumeSize != nil {
		in, out := &in.DataVolumeSize, &out.DataVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.DataVolumeType != nil {
		in, out := &in.DataVolumeType, &out.DataVolumeType
		*out = new(string)
		**out = **in
	}
	if in.Flavor != nil {
		in, out := &in.Flavor, &out.Flavor
		*out = new(string)
		**out = **in
	}
	if in.NodeNumber != nil {
		in, out := &in.NodeNumber, &out.NodeNumber
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MasterNodesParameters.
func (in *MasterNodesParameters) DeepCopy() *MasterNodesParameters {
	if in == nil {
		return nil
	}
	out := new(MasterNodesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamingCoreNodesObservation) DeepCopyInto(out *StreamingCoreNodesObservation) {
	*out = *in
	if in.RootVolumeSize != nil {
		in, out := &in.RootVolumeSize, &out.RootVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.RootVolumeType != nil {
		in, out := &in.RootVolumeType, &out.RootVolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamingCoreNodesObservation.
func (in *StreamingCoreNodesObservation) DeepCopy() *StreamingCoreNodesObservation {
	if in == nil {
		return nil
	}
	out := new(StreamingCoreNodesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamingCoreNodesParameters) DeepCopyInto(out *StreamingCoreNodesParameters) {
	*out = *in
	if in.DataVolumeCount != nil {
		in, out := &in.DataVolumeCount, &out.DataVolumeCount
		*out = new(float64)
		**out = **in
	}
	if in.DataVolumeSize != nil {
		in, out := &in.DataVolumeSize, &out.DataVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.DataVolumeType != nil {
		in, out := &in.DataVolumeType, &out.DataVolumeType
		*out = new(string)
		**out = **in
	}
	if in.Flavor != nil {
		in, out := &in.Flavor, &out.Flavor
		*out = new(string)
		**out = **in
	}
	if in.NodeNumber != nil {
		in, out := &in.NodeNumber, &out.NodeNumber
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamingCoreNodesParameters.
func (in *StreamingCoreNodesParameters) DeepCopy() *StreamingCoreNodesParameters {
	if in == nil {
		return nil
	}
	out := new(StreamingCoreNodesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamingTaskNodesObservation) DeepCopyInto(out *StreamingTaskNodesObservation) {
	*out = *in
	if in.RootVolumeSize != nil {
		in, out := &in.RootVolumeSize, &out.RootVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.RootVolumeType != nil {
		in, out := &in.RootVolumeType, &out.RootVolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamingTaskNodesObservation.
func (in *StreamingTaskNodesObservation) DeepCopy() *StreamingTaskNodesObservation {
	if in == nil {
		return nil
	}
	out := new(StreamingTaskNodesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamingTaskNodesParameters) DeepCopyInto(out *StreamingTaskNodesParameters) {
	*out = *in
	if in.DataVolumeCount != nil {
		in, out := &in.DataVolumeCount, &out.DataVolumeCount
		*out = new(float64)
		**out = **in
	}
	if in.DataVolumeSize != nil {
		in, out := &in.DataVolumeSize, &out.DataVolumeSize
		*out = new(float64)
		**out = **in
	}
	if in.DataVolumeType != nil {
		in, out := &in.DataVolumeType, &out.DataVolumeType
		*out = new(string)
		**out = **in
	}
	if in.Flavor != nil {
		in, out := &in.Flavor, &out.Flavor
		*out = new(string)
		**out = **in
	}
	if in.NodeNumber != nil {
		in, out := &in.NodeNumber, &out.NodeNumber
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamingTaskNodesParameters.
func (in *StreamingTaskNodesParameters) DeepCopy() *StreamingTaskNodesParameters {
	if in == nil {
		return nil
	}
	out := new(StreamingTaskNodesParameters)
	in.DeepCopyInto(out)
	return out
}
