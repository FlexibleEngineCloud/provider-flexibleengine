/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ProtectionGroupObservation struct {

	// ID of the protection group.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type ProtectionGroupParameters struct {

	// The description of a protection group. Changing this creates a new group.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the ID of an active-active domain. Changing this creates a new group.
	// +kubebuilder:validation:Required
	DomainID *string `json:"domainId" tf:"domain_id,omitempty"`

	// Specifies the deployment model. The default value is migration indicating migration within a VPC.
	// Changing this creates a new group.
	// +kubebuilder:validation:Optional
	DrType *string `json:"drType,omitempty" tf:"dr_type,omitempty"`

	// Enable protection or not. It can only be set to true when there's replication pairs within the protection group.
	// +kubebuilder:validation:Optional
	Enable *bool `json:"enable,omitempty" tf:"enable,omitempty"`

	// The name of a protection group.
	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// Specifies the source AZ of a protection group. Changing this creates a new group.
	// +kubebuilder:validation:Required
	SourceAvailabilityZone *string `json:"sourceAvailabilityZone" tf:"source_availability_zone,omitempty"`

	// Specifies the ID of the source VPC. Changing this creates a new group.
	// +crossplane:generate:reference:type=github.com/FrangipaneTeam/provider-flexibleengine/apis/vpc/v1beta1.VPC
	// +kubebuilder:validation:Optional
	SourceVPCID *string `json:"sourceVpcId,omitempty" tf:"source_vpc_id,omitempty"`

	// Reference to a VPC in vpc to populate sourceVpcId.
	// +kubebuilder:validation:Optional
	SourceVPCIDRef *v1.Reference `json:"sourceVpcIdRef,omitempty" tf:"-"`

	// Selector for a VPC in vpc to populate sourceVpcId.
	// +kubebuilder:validation:Optional
	SourceVPCIDSelector *v1.Selector `json:"sourceVpcIdSelector,omitempty" tf:"-"`

	// Specifies the target AZ of a protection group. Changing this creates a new group.
	// +kubebuilder:validation:Required
	TargetAvailabilityZone *string `json:"targetAvailabilityZone" tf:"target_availability_zone,omitempty"`
}

// ProtectionGroupSpec defines the desired state of ProtectionGroup
type ProtectionGroupSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ProtectionGroupParameters `json:"forProvider"`
}

// ProtectionGroupStatus defines the observed state of ProtectionGroup.
type ProtectionGroupStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ProtectionGroupObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// ProtectionGroup is the Schema for the ProtectionGroups API. ""page_title: "flexibleengine_sdrs_protectiongroup_v1"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,flexibleengine}
type ProtectionGroup struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ProtectionGroupSpec   `json:"spec"`
	Status            ProtectionGroupStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ProtectionGroupList contains a list of ProtectionGroups
type ProtectionGroupList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ProtectionGroup `json:"items"`
}

// Repository type metadata.
var (
	ProtectionGroup_Kind             = "ProtectionGroup"
	ProtectionGroup_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ProtectionGroup_Kind}.String()
	ProtectionGroup_KindAPIVersion   = ProtectionGroup_Kind + "." + CRDGroupVersion.String()
	ProtectionGroup_GroupVersionKind = CRDGroupVersion.WithKind(ProtectionGroup_Kind)
)

func init() {
	SchemeBuilder.Register(&ProtectionGroup{}, &ProtectionGroupList{})
}
