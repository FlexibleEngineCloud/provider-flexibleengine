/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type BackupPolicyObservation struct {

	// Specifies a backup policy ID.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies the number of volumes associated with the backup policy.
	PolicyResourceCount *float64 `json:"policyResourceCount,omitempty" tf:"policy_resource_count,omitempty"`
}

type BackupPolicyParameters struct {

	// Specifies the backup interval. The value is in the range of 1 to 14 days.
	// Either this field or week_frequency must be specified.
	// +kubebuilder:validation:Optional
	Frequency *float64 `json:"frequency,omitempty" tf:"frequency,omitempty"`

	// Specifies the policy name. The value is a string of 1 to 64 characters that
	// can contain letters, digits, underscores (_), and hyphens (-). It cannot start with default.
	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies days of retained backups. Minimum value is 2.
	// Either this field or rentention_num must be specified.
	// +kubebuilder:validation:Optional
	RententionDay *float64 `json:"rententionDay,omitempty" tf:"rentention_day,omitempty"`

	// Specifies number of retained backups. Minimum value is 2.
	// Either this field or rentention_day must be specified.
	// +kubebuilder:validation:Optional
	RententionNum *float64 `json:"rententionNum,omitempty" tf:"rentention_num,omitempty"`

	// References to BlockStorageVolume in evs to populate resources.
	// +kubebuilder:validation:Optional
	ResourceRef []v1.Reference `json:"resourceRef,omitempty" tf:"-"`

	// Selector for a list of BlockStorageVolume in evs to populate resources.
	// +kubebuilder:validation:Optional
	ResourceSelector *v1.Selector `json:"resourceSelector,omitempty" tf:"-"`

	// Specifies one or more volumes associated with the backup policy.
	// Any previously associated backup policy will no longer apply.
	// +crossplane:generate:reference:type=github.com/FlexibleEngineCloud/provider-flexibleengine/apis/evs/v1beta1.BlockStorageVolume
	// +crossplane:generate:reference:refFieldName=ResourceRef
	// +crossplane:generate:reference:selectorFieldName=ResourceSelector
	// +kubebuilder:validation:Optional
	Resources []*string `json:"resources,omitempty" tf:"resources,omitempty"`

	// Specifies whether to retain the first backup in the current month.
	// Possible values are Y or N.
	// +kubebuilder:validation:Required
	RetainFirstBackup *string `json:"retainFirstBackup" tf:"retain_first_backup,omitempty"`

	// Specifies the start time(UTC) of the backup job. The value is in the
	// HH:mm format. You need to set the execution time on a full hour. You can set multiple execution
	// times, and use commas (,) to separate one time from another.
	// +kubebuilder:validation:Required
	StartTime *string `json:"startTime" tf:"start_time,omitempty"`

	// Specifies the backup policy status. Possible values are ON or OFF. Defaults to ON.
	// +kubebuilder:validation:Optional
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// Specifies on which days of each week backup jobs are executed.
	// The value can be one or more of the following: SUN, MON, TUE, WED, THU, FRI, SAT.
	// Either this field or frequency must be specified.
	// +kubebuilder:validation:Optional
	WeekFrequency []*string `json:"weekFrequency,omitempty" tf:"week_frequency,omitempty"`
}

// BackupPolicySpec defines the desired state of BackupPolicy
type BackupPolicySpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     BackupPolicyParameters `json:"forProvider"`
}

// BackupPolicyStatus defines the observed state of BackupPolicy.
type BackupPolicyStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        BackupPolicyObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// BackupPolicy is the Schema for the BackupPolicys API. ""page_title: "flexibleengine_vbs_backup_policy_v2"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,flexibleengine}
type BackupPolicy struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              BackupPolicySpec   `json:"spec"`
	Status            BackupPolicyStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// BackupPolicyList contains a list of BackupPolicys
type BackupPolicyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []BackupPolicy `json:"items"`
}

// Repository type metadata.
var (
	BackupPolicy_Kind             = "BackupPolicy"
	BackupPolicy_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: BackupPolicy_Kind}.String()
	BackupPolicy_KindAPIVersion   = BackupPolicy_Kind + "." + CRDGroupVersion.String()
	BackupPolicy_GroupVersionKind = CRDGroupVersion.WithKind(BackupPolicy_Kind)
)

func init() {
	SchemeBuilder.Register(&BackupPolicy{}, &BackupPolicyList{})
}
