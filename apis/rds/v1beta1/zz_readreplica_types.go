/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ReadReplicaDBObservation struct {

	// Indicates the database port information.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// Indicates the DB engine. Value: MySQL, PostgreSQL, SQLServer.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Indicates the default user name of database.
	UserName *string `json:"userName,omitempty" tf:"user_name,omitempty"`

	// Indicates the database version.
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type ReadReplicaDBParameters struct {
}

type ReadReplicaObservation struct {

	// Indicates the database information. Structure is documented below.
	DB []ReadReplicaDBObservation `json:"db,omitempty" tf:"db,omitempty"`

	// Indicates the instance ID.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Indicates the private IP address list.
	PrivateIps []*string `json:"privateIps,omitempty" tf:"private_ips,omitempty"`

	// Indicates the public IP address list.
	PublicIps []*string `json:"publicIps,omitempty" tf:"public_ips,omitempty"`

	// Indicates the security group which the RDS DB instance belongs to.
	SecurityGroupID *string `json:"securityGroupId,omitempty" tf:"security_group_id,omitempty"`

	// Indicates the instance status.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// Indicates the subnet id.
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// Specifies the volume type. Its value can be any of the following
	// and is case-sensitive:
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Indicates the VPC ID.
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`
}

type ReadReplicaParameters struct {

	// Specifies the AZ name.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Required
	AvailabilityZone *string `json:"availabilityZone" tf:"availability_zone,omitempty"`

	// Specifies the specification code.
	// +kubebuilder:validation:Required
	Flavor *string `json:"flavor" tf:"flavor,omitempty"`

	// Specifies the DB instance name.
	// The DB instance name of the same type must be unique for the
	// same tenant. The value must be 4 to 64 characters in length
	// and start with a letter. It is case-sensitive and can contain
	// only letters, digits, hyphens (-), and underscores (_).
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// The region in which to create the instance. If omitted,
	// the region argument of the provider is used. Currently, read replicas can
	// be created only in the same region as that of the promary DB instance.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies the DB instance ID, which is used to
	// create a read replica. Changing this parameter will create a new resource.
	// +crossplane:generate:reference:type=Instance
	// +kubebuilder:validation:Optional
	ReplicaOfID *string `json:"replicaOfId,omitempty" tf:"replica_of_id,omitempty"`

	// Reference to a Instance to populate replicaOfId.
	// +kubebuilder:validation:Optional
	ReplicaOfIDRef *v1.Reference `json:"replicaOfIdRef,omitempty" tf:"-"`

	// Selector for a Instance to populate replicaOfId.
	// +kubebuilder:validation:Optional
	ReplicaOfIDSelector *v1.Selector `json:"replicaOfIdSelector,omitempty" tf:"-"`

	// A mapping of tags to assign to the RDS read replica instance.
	// Each tag is represented by one key-value pair.
	// +kubebuilder:validation:Optional
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Specifies the volume information. Structure is documented below.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Required
	Volume []ReadReplicaVolumeParameters `json:"volume" tf:"volume,omitempty"`
}

type ReadReplicaVolumeObservation struct {
}

type ReadReplicaVolumeParameters struct {

	// Specifies the key ID for disk encryption.
	// Changing this parameter will create a new resource.
	// +crossplane:generate:reference:type=github.com/gaetanars/provider-flexibleengine/apis/kms/v1beta1.Key
	// +kubebuilder:validation:Optional
	DiskEncryptionID *string `json:"diskEncryptionId,omitempty" tf:"disk_encryption_id,omitempty"`

	// Reference to a Key in kms to populate diskEncryptionId.
	// +kubebuilder:validation:Optional
	DiskEncryptionIDRef *v1.Reference `json:"diskEncryptionIdRef,omitempty" tf:"-"`

	// Selector for a Key in kms to populate diskEncryptionId.
	// +kubebuilder:validation:Optional
	DiskEncryptionIDSelector *v1.Selector `json:"diskEncryptionIdSelector,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	Size *float64 `json:"size,omitempty" tf:"size,omitempty"`

	// Specifies the volume type. Its value can be any of the following
	// and is case-sensitive:
	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

// ReadReplicaSpec defines the desired state of ReadReplica
type ReadReplicaSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ReadReplicaParameters `json:"forProvider"`
}

// ReadReplicaStatus defines the observed state of ReadReplica.
type ReadReplicaStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ReadReplicaObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// ReadReplica is the Schema for the ReadReplicas API. ""page_title: "flexibleengine_rds_read_replica_v3"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,flexibleengine}
type ReadReplica struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ReadReplicaSpec   `json:"spec"`
	Status            ReadReplicaStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ReadReplicaList contains a list of ReadReplicas
type ReadReplicaList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ReadReplica `json:"items"`
}

// Repository type metadata.
var (
	ReadReplica_Kind             = "ReadReplica"
	ReadReplica_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ReadReplica_Kind}.String()
	ReadReplica_KindAPIVersion   = ReadReplica_Kind + "." + CRDGroupVersion.String()
	ReadReplica_GroupVersionKind = CRDGroupVersion.WithKind(ReadReplica_Kind)
)

func init() {
	SchemeBuilder.Register(&ReadReplica{}, &ReadReplicaList{})
}
