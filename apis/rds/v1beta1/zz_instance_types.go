/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type BackupStrategyObservation struct {
}

type BackupStrategyParameters struct {

	// Specifies the retention days for specific backup files. The value range is from 0 to
	// 732. If this parameter is not specified or set to 0, the automated backup policy is disabled.
	// +kubebuilder:validation:Optional
	KeepDays *float64 `json:"keepDays,omitempty" tf:"keep_days,omitempty"`

	// Specifies the backup time window. Automated backups will be triggered during the
	// backup time window. It must be a valid value in the hh:mm-HH:MM
	// format. The current time is in the UTC format. The HH value must be 1 greater than the hh value. The values of mm and
	// MM must be the same and must be set to any of the following: 00, 15, 30, or 45. Example value: 08:15-09:15 23:00-00:
	// 00.
	// +kubebuilder:validation:Required
	StartTime *string `json:"startTime" tf:"start_time,omitempty"`
}

type DBObservation struct {

	// Indicates the default user name of database.
	UserName *string `json:"userName,omitempty" tf:"user_name,omitempty"`
}

type DBParameters struct {

	// Specifies the database password. The value cannot be
	// empty and should contain 8 to 32 characters, including uppercase
	// and lowercase letters, digits, and the following special
	// characters: ~!@#%^*-_=+? You are advised to enter a strong
	// password to improve security, preventing security risks such as
	// brute force cracking.  Changing this parameter will create a new resource.
	// +kubebuilder:validation:Required
	PasswordSecretRef v1.SecretKeySelector `json:"passwordSecretRef" tf:"-"`

	// Specifies the database port.
	// +kubebuilder:validation:Optional
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// Specifies the DB engine. Available value are MySQL, PostgreSQL and
	// SQLServer. Changing this parameter will create a new resource.
	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`

	// Specifies the database version. MySQL databases support MySQL 5.6
	// and 5.7, example values: "5.6", "5.7". PostgreSQL databases support
	// PostgreSQL 9.5, 9.6, 10 and 11, example values: "9.5", "9.6", "10", "11". Microsoft SQL Server
	// databases support 2014 SE and 2014 EE, example values: "2014_SE", "2014_EE".
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Required
	Version *string `json:"version" tf:"version,omitempty"`
}

type InstanceObservation struct {

	// Indicates the creation time.
	Created *string `json:"created,omitempty" tf:"created,omitempty"`

	// Specifies the database information. Structure is documented below.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Required
	DB []DBObservation `json:"db,omitempty" tf:"db,omitempty"`

	// The resource ID in UUID format.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Indicates the instance nodes information. Structure is documented below.
	Nodes []NodesObservation `json:"nodes,omitempty" tf:"nodes,omitempty"`

	// Indicates the private IP address list.
	// It is a blank string until an ECS is created.
	PrivateIps []*string `json:"privateIps,omitempty" tf:"private_ips,omitempty"`

	// Indicates the public IP address list.
	PublicIps []*string `json:"publicIps,omitempty" tf:"public_ips,omitempty"`

	// Indicates the DB instance status.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`
}

type InstanceParameters struct {

	// +kubebuilder:validation:Optional
	AutoPay *string `json:"autoPay,omitempty" tf:"auto_pay,omitempty"`

	// +kubebuilder:validation:Optional
	AutoRenew *string `json:"autoRenew,omitempty" tf:"auto_renew,omitempty"`

	// Specifies the list of AZ name.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Required
	AvailabilityZone []*string `json:"availabilityZone" tf:"availability_zone,omitempty"`

	// Specifies the advanced backup policy. Structure is documented below.
	// +kubebuilder:validation:Optional
	BackupStrategy []BackupStrategyParameters `json:"backupStrategy,omitempty" tf:"backup_strategy,omitempty"`

	// +kubebuilder:validation:Optional
	ChargingMode *string `json:"chargingMode,omitempty" tf:"charging_mode,omitempty"`

	// +kubebuilder:validation:Optional
	Collation *string `json:"collation,omitempty" tf:"collation,omitempty"`

	// Specifies the database information. Structure is documented below.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Required
	DB []DBParameters `json:"db" tf:"db,omitempty"`

	// The resource ID in UUID format.
	// +kubebuilder:validation:Optional
	EnterpriseProjectID *string `json:"enterpriseProjectId,omitempty" tf:"enterprise_project_id,omitempty"`

	// Specifies an intranet IP address of RDS DB instance.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	FixedIP *string `json:"fixedIp,omitempty" tf:"fixed_ip,omitempty"`

	// Specifies the specification code.
	// +kubebuilder:validation:Required
	Flavor *string `json:"flavor" tf:"flavor,omitempty"`

	// Specifies the replication mode for the standby DB instance.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	HaReplicationMode *string `json:"haReplicationMode,omitempty" tf:"ha_replication_mode,omitempty"`

	// Specifies the DB instance name. The DB instance name of the same type must be unique for
	// the same tenant. The value must be 4 to 64 characters in length and start with a letter. It is case-sensitive and can
	// contain only letters, digits, hyphens (-), and underscores (_).
	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// Specifies the parameter group ID.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	ParamGroupID *string `json:"paramGroupId,omitempty" tf:"param_group_id,omitempty"`

	// +kubebuilder:validation:Optional
	Period *float64 `json:"period,omitempty" tf:"period,omitempty"`

	// +kubebuilder:validation:Optional
	PeriodUnit *string `json:"periodUnit,omitempty" tf:"period_unit,omitempty"`

	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies whether to enable the SSL for MySQL database.
	// +kubebuilder:validation:Optional
	SSLEnable *bool `json:"sslEnable,omitempty" tf:"ssl_enable,omitempty"`

	// Specifies the security group which the RDS DB instance belongs to.
	// +crossplane:generate:reference:type=github.com/FrangipaneTeam/provider-flexibleengine/apis/vpc/v1beta1.SecurityGroup
	// +kubebuilder:validation:Optional
	SecurityGroupID *string `json:"securityGroupId,omitempty" tf:"security_group_id,omitempty"`

	// Reference to a SecurityGroup in vpc to populate securityGroupId.
	// +kubebuilder:validation:Optional
	SecurityGroupIDRef *v1.Reference `json:"securityGroupIdRef,omitempty" tf:"-"`

	// Selector for a SecurityGroup in vpc to populate securityGroupId.
	// +kubebuilder:validation:Optional
	SecurityGroupIDSelector *v1.Selector `json:"securityGroupIdSelector,omitempty" tf:"-"`

	// Specifies the ID of the VPC Subnet.
	// Changing this parameter will create a new resource.
	// +crossplane:generate:reference:type=github.com/FrangipaneTeam/provider-flexibleengine/apis/vpc/v1beta1.VPCSubnet
	// +crossplane:generate:reference:extractor=github.com/FrangipaneTeam/provider-flexibleengine/pkg/tools.ExtractorParamPathfunc(true, "id")
	// +kubebuilder:validation:Optional
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// Reference to a VPCSubnet in vpc to populate subnetId.
	// +kubebuilder:validation:Optional
	SubnetIDRef *v1.Reference `json:"subnetIdRef,omitempty" tf:"-"`

	// Selector for a VPCSubnet in vpc to populate subnetId.
	// +kubebuilder:validation:Optional
	SubnetIDSelector *v1.Selector `json:"subnetIdSelector,omitempty" tf:"-"`

	// A mapping of tags to assign to the RDS instance.
	// Each tag is represented by one key-value pair.
	// +kubebuilder:validation:Optional
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Specifies the UTC time zone. The value ranges from
	// UTC-12:00 to UTC+12:00 at the full hour, and defaults to UTC.
	// +kubebuilder:validation:Optional
	TimeZone *string `json:"timeZone,omitempty" tf:"time_zone,omitempty"`

	// Specifies the VPC ID. Changing this parameter will create a new resource.
	// +crossplane:generate:reference:type=github.com/FrangipaneTeam/provider-flexibleengine/apis/vpc/v1beta1.VPC
	// +kubebuilder:validation:Optional
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Reference to a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDRef *v1.Reference `json:"vpcIdRef,omitempty" tf:"-"`

	// Selector for a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDSelector *v1.Selector `json:"vpcIdSelector,omitempty" tf:"-"`

	// Specifies the volume information. Structure is documented below.
	// +kubebuilder:validation:Required
	Volume []VolumeParameters `json:"volume" tf:"volume,omitempty"`
}

type NodesObservation struct {

	// Indicates the AZ.
	AvailabilityZone *string `json:"availabilityZone,omitempty" tf:"availability_zone,omitempty"`

	// Indicates the node ID.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Indicates the node name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Indicates the node type. The value can be master or slave,
	// indicating the primary node or standby node respectively.
	Role *string `json:"role,omitempty" tf:"role,omitempty"`

	// Indicates the node status.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`
}

type NodesParameters struct {
}

type VolumeObservation struct {
}

type VolumeParameters struct {

	// Specifies the key ID for disk encryption.
	// Changing this parameter will create a new resource.
	// +crossplane:generate:reference:type=github.com/FrangipaneTeam/provider-flexibleengine/apis/kms/v1beta1.Key
	// +kubebuilder:validation:Optional
	DiskEncryptionID *string `json:"diskEncryptionId,omitempty" tf:"disk_encryption_id,omitempty"`

	// Reference to a Key in kms to populate diskEncryptionId.
	// +kubebuilder:validation:Optional
	DiskEncryptionIDRef *v1.Reference `json:"diskEncryptionIdRef,omitempty" tf:"-"`

	// Selector for a Key in kms to populate diskEncryptionId.
	// +kubebuilder:validation:Optional
	DiskEncryptionIDSelector *v1.Selector `json:"diskEncryptionIdSelector,omitempty" tf:"-"`

	// Specifies the volume size. Its value range is from 40 GB to 4000 GB.
	// The value must be a multiple of 10 and greater than the original size.
	// +kubebuilder:validation:Required
	Size *float64 `json:"size" tf:"size,omitempty"`

	// Specifies the volume type. Its value can be any of the following
	// and is case-sensitive:
	// +kubebuilder:validation:Required
	Type *string `json:"type" tf:"type,omitempty"`
}

// InstanceSpec defines the desired state of Instance
type InstanceSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     InstanceParameters `json:"forProvider"`
}

// InstanceStatus defines the observed state of Instance.
type InstanceStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        InstanceObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// Instance is the Schema for the Instances API. ""page_title: "flexibleengine_rds_instance_v3"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,flexibleengine}
type Instance struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              InstanceSpec   `json:"spec"`
	Status            InstanceStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// InstanceList contains a list of Instances
type InstanceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Instance `json:"items"`
}

// Repository type metadata.
var (
	Instance_Kind             = "Instance"
	Instance_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Instance_Kind}.String()
	Instance_KindAPIVersion   = Instance_Kind + "." + CRDGroupVersion.String()
	Instance_GroupVersionKind = CRDGroupVersion.WithKind(Instance_Kind)
)

func init() {
	SchemeBuilder.Register(&Instance{}, &InstanceList{})
}
