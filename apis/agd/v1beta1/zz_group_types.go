/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type GroupEnvironmentObservation struct {

	// Specifies an array of one or more APIG environment variables. The object structure is
	// documented below. The environment variables of different groups are isolated in the same environment.
	// +kubebuilder:validation:Required
	Variable []VariableObservation `json:"variable,omitempty" tf:"variable,omitempty"`
}

type GroupEnvironmentParameters struct {

	// Specifies the APIG environment ID of the associated APIG group.
	// +kubebuilder:validation:Required
	EnvironmentID *string `json:"environmentId" tf:"environment_id,omitempty"`

	// Specifies an array of one or more APIG environment variables. The object structure is
	// documented below. The environment variables of different groups are isolated in the same environment.
	// +kubebuilder:validation:Required
	Variable []VariableParameters `json:"variable" tf:"variable,omitempty"`
}

type GroupObservation struct {

	// Specifies an array of one or more APIG environments of the associated APIG group. The
	// object structure is documented below.
	// +kubebuilder:validation:Optional
	Environment []GroupEnvironmentObservation `json:"environment,omitempty" tf:"environment,omitempty"`

	// ID of the API group.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Registration time, in RFC-3339 format.
	RegistraionTime *string `json:"registraionTime,omitempty" tf:"registraion_time,omitempty"`

	// Time when the API group was last modified, in RFC-3339 format.
	UpdateTime *string `json:"updateTime,omitempty" tf:"update_time,omitempty"`
}

type GroupParameters struct {

	// Specifies the description about the API group. The description contain a maximum of
	// 255 characters and the angle brackets (< and >) are not allowed. Chinese characters must be in UTF-8 or Unicode
	// format.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies an array of one or more APIG environments of the associated APIG group. The
	// object structure is documented below.
	// +kubebuilder:validation:Optional
	Environment []GroupEnvironmentParameters `json:"environment,omitempty" tf:"environment,omitempty"`

	// Specifies an ID of the APIG dedicated instance to which the API group
	// belongs to. Changing this will create a new API group resource.
	// +crossplane:generate:reference:type=Instance
	// +kubebuilder:validation:Optional
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Reference to a Instance to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDRef *v1.Reference `json:"instanceIdRef,omitempty" tf:"-"`

	// Selector for a Instance to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDSelector *v1.Selector `json:"instanceIdSelector,omitempty" tf:"-"`

	// Specifies the name of the API group. The API group name consists of 3 to 64 characters,
	// starting with a letter. Only letters, digits and underscores (_) are allowed. Chinese characters must be in UTF-8 or
	// Unicode format.
	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// Specifies the region in which to create the API group resource. If omitted,
	// the provider-level region will be used. Changing this will create a new API group resource.
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type VariableObservation struct {

	// ID of the API group.
	VariableID *string `json:"variableId,omitempty" tf:"variable_id,omitempty"`
}

type VariableParameters struct {

	// Specifies the variable name, which can contains of 3 to 32 characters, starting with a
	// letter. Only letters, digits, hyphens (-), and underscores (_) are allowed. In the definition of an API, name (
	// case-sensitive) indicates a variable, such as #Name#. It is replaced by the actual value when the API is published in
	// an environment. The variable names are not allowed to be repeated for an API group.
	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// Specifies the environment ariable value, which can contains of 1 to 255 characters. Only
	// letters, digits and special characters (_-/.:) are allowed.
	// +kubebuilder:validation:Required
	Value *string `json:"value" tf:"value,omitempty"`
}

// GroupSpec defines the desired state of Group
type GroupSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     GroupParameters `json:"forProvider"`
}

// GroupStatus defines the observed state of Group.
type GroupStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        GroupObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// Group is the Schema for the Groups API. ""page_title: "flexibleengine_apig_group"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,flexibleengine}
type Group struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              GroupSpec   `json:"spec"`
	Status            GroupStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// GroupList contains a list of Groups
type GroupList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Group `json:"items"`
}

// Repository type metadata.
var (
	Group_Kind             = "Group"
	Group_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Group_Kind}.String()
	Group_KindAPIVersion   = Group_Kind + "." + CRDGroupVersion.String()
	Group_GroupVersionKind = CRDGroupVersion.WithKind(Group_Kind)
)

func init() {
	SchemeBuilder.Register(&Group{}, &GroupList{})
}
