/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type APIPublishmentObservation struct {

	// Environment name to which the current version of the API is published.
	// The name of the environment to which the current version of the API is published.
	EnvName *string `json:"envName,omitempty" tf:"env_name,omitempty"`

	// All publish informations of the API. The structure is documented below.
	// All publish informations of the API.
	Histories []HistoriesObservation `json:"histories,omitempty" tf:"histories,omitempty"`

	// Resource ID, which is constructed from the instance ID, environment ID, and API ID, separated by slashes.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The publish ID of the API in current environment.
	// The publish ID of the API in current environment.
	PublishID *string `json:"publishId,omitempty" tf:"publish_id,omitempty"`

	// Time when the current version was published.
	PublishedAt *string `json:"publishedAt,omitempty" tf:"published_at,omitempty"`
}

type APIPublishmentParameters struct {

	// Specifies the API ID to be published or already published.
	// Changing this will create a new publishment resource.
	// The ID of the API to be published or already published.
	// +crossplane:generate:reference:type=API
	// +kubebuilder:validation:Optional
	APIID *string `json:"apiId,omitempty" tf:"api_id,omitempty"`

	// Reference to a API to populate apiId.
	// +kubebuilder:validation:Optional
	APIIDRef *v1.Reference `json:"apiIdRef,omitempty" tf:"-"`

	// Selector for a API to populate apiId.
	// +kubebuilder:validation:Optional
	APIIDSelector *v1.Selector `json:"apiIdSelector,omitempty" tf:"-"`

	// Specifies the description of the current publishment.
	// The description of the current publishment.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the environment ID to which the current version of the API will be
	// published or has been published. Changing this will create a new publishment resource.
	// The ID of the environment to which the current version of the API will be published or has been published.
	// +crossplane:generate:reference:type=Environment
	// +kubebuilder:validation:Optional
	EnvID *string `json:"envId,omitempty" tf:"env_id,omitempty"`

	// Reference to a Environment to populate envId.
	// +kubebuilder:validation:Optional
	EnvIDRef *v1.Reference `json:"envIdRef,omitempty" tf:"-"`

	// Selector for a Environment to populate envId.
	// +kubebuilder:validation:Optional
	EnvIDSelector *v1.Selector `json:"envIdSelector,omitempty" tf:"-"`

	// Specifies an ID of the APIG dedicated instance to which the API belongs
	// to. Changing this will create a new publishment resource.
	// The ID of the dedicated instance to which the API and the environment belongs.
	// +crossplane:generate:reference:type=Instance
	// +kubebuilder:validation:Optional
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Reference to a Instance to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDRef *v1.Reference `json:"instanceIdRef,omitempty" tf:"-"`

	// Selector for a Instance to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDSelector *v1.Selector `json:"instanceIdSelector,omitempty" tf:"-"`

	// Specifies the region in which to publish APIs.
	// If omitted, the provider-level region will be used. Changing this will create a new publishment resource.
	// The region in which to publish API.
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies the version ID of the current publishment.
	// The version ID of the current publishment.
	// +kubebuilder:validation:Optional
	VersionID *string `json:"versionId,omitempty" tf:"version_id,omitempty"`
}

type HistoriesObservation struct {

	// Version description of the API publishment.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Version ID of the API publishment.
	VersionID *string `json:"versionId,omitempty" tf:"version_id,omitempty"`
}

type HistoriesParameters struct {
}

// APIPublishmentSpec defines the desired state of APIPublishment
type APIPublishmentSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     APIPublishmentParameters `json:"forProvider"`
}

// APIPublishmentStatus defines the observed state of APIPublishment.
type APIPublishmentStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        APIPublishmentObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// APIPublishment is the Schema for the APIPublishments API. ""page_title: "flexibleengine_apig_api_publishment"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,flexibleengine}
type APIPublishment struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              APIPublishmentSpec   `json:"spec"`
	Status            APIPublishmentStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// APIPublishmentList contains a list of APIPublishments
type APIPublishmentList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []APIPublishment `json:"items"`
}

// Repository type metadata.
var (
	APIPublishment_Kind             = "APIPublishment"
	APIPublishment_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: APIPublishment_Kind}.String()
	APIPublishment_KindAPIVersion   = APIPublishment_Kind + "." + CRDGroupVersion.String()
	APIPublishment_GroupVersionKind = CRDGroupVersion.WithKind(APIPublishment_Kind)
)

func init() {
	SchemeBuilder.Register(&APIPublishment{}, &APIPublishmentList{})
}
