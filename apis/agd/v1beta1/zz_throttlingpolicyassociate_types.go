/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ThrottlingPolicyAssociateObservation struct {

	// Resource ID. The format is <instance_id>/<policy_id>.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type ThrottlingPolicyAssociateParameters struct {

	// Specifies the ID of the APIG dedicated instance to which the APIs and the
	// throttling policy belongs. Changing this will create a new resource.
	// The ID of the dedicated instance to which the APIs and the throttling policy belongs.
	// +crossplane:generate:reference:type=Instance
	// +kubebuilder:validation:Optional
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Reference to a Instance to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDRef *v1.Reference `json:"instanceIdRef,omitempty" tf:"-"`

	// Selector for a Instance to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDSelector *v1.Selector `json:"instanceIdSelector,omitempty" tf:"-"`

	// Specifies the ID of the API group to which the API response belongs to.
	// Changing this will create a new resource.
	// The ID of the throttling policy.
	// +crossplane:generate:reference:type=ThrottlingPolicy
	// +kubebuilder:validation:Optional
	PolicyID *string `json:"policyId,omitempty" tf:"policy_id,omitempty"`

	// Reference to a ThrottlingPolicy to populate policyId.
	// +kubebuilder:validation:Optional
	PolicyIDRef *v1.Reference `json:"policyIdRef,omitempty" tf:"-"`

	// Selector for a ThrottlingPolicy to populate policyId.
	// +kubebuilder:validation:Optional
	PolicyIDSelector *v1.Selector `json:"policyIdSelector,omitempty" tf:"-"`

	// Specifies the publish ID corresponding to the API bound by the throttling policy.
	// The publish IDs corresponding to the APIs bound by the throttling policy.
	// +kubebuilder:validation:Required
	PublishIds []*string `json:"publishIds" tf:"publish_ids,omitempty"`

	// Specifies the region where the API instance and throttling policy are located.
	// If omitted, the provider-level region will be used. Changing this will create a new resource.
	// The region where the dedicated instance and the throttling policy are located.
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

// ThrottlingPolicyAssociateSpec defines the desired state of ThrottlingPolicyAssociate
type ThrottlingPolicyAssociateSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ThrottlingPolicyAssociateParameters `json:"forProvider"`
}

// ThrottlingPolicyAssociateStatus defines the observed state of ThrottlingPolicyAssociate.
type ThrottlingPolicyAssociateStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ThrottlingPolicyAssociateObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// ThrottlingPolicyAssociate is the Schema for the ThrottlingPolicyAssociates API. ""page_title: "flexibleengine_apig_throttling_policy_associate"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,flexibleengine}
type ThrottlingPolicyAssociate struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ThrottlingPolicyAssociateSpec   `json:"spec"`
	Status            ThrottlingPolicyAssociateStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ThrottlingPolicyAssociateList contains a list of ThrottlingPolicyAssociates
type ThrottlingPolicyAssociateList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ThrottlingPolicyAssociate `json:"items"`
}

// Repository type metadata.
var (
	ThrottlingPolicyAssociate_Kind             = "ThrottlingPolicyAssociate"
	ThrottlingPolicyAssociate_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ThrottlingPolicyAssociate_Kind}.String()
	ThrottlingPolicyAssociate_KindAPIVersion   = ThrottlingPolicyAssociate_Kind + "." + CRDGroupVersion.String()
	ThrottlingPolicyAssociate_GroupVersionKind = CRDGroupVersion.WithKind(ThrottlingPolicyAssociate_Kind)
)

func init() {
	SchemeBuilder.Register(&ThrottlingPolicyAssociate{}, &ThrottlingPolicyAssociateList{})
}
