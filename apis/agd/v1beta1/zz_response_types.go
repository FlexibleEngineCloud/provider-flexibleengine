/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ResponseObservation struct {

	// The creation time of the API custom response.
	CreatedAt *string `json:"createdAt,omitempty" tf:"created_at,omitempty"`

	// ID of the API custom response.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The latest update time of the API custom response.
	UpdatedAt *string `json:"updatedAt,omitempty" tf:"updated_at,omitempty"`
}

type ResponseParameters struct {

	// Specifies the ID of the API group to which the API response belongs to.
	// Changing this will create a new API custom response resource.
	// The ID of the API group to which the API custom response belongs.
	// +crossplane:generate:reference:type=Group
	// +kubebuilder:validation:Optional
	GroupID *string `json:"groupId,omitempty" tf:"group_id,omitempty"`

	// Reference to a Group to populate groupId.
	// +kubebuilder:validation:Optional
	GroupIDRef *v1.Reference `json:"groupIdRef,omitempty" tf:"-"`

	// Selector for a Group to populate groupId.
	// +kubebuilder:validation:Optional
	GroupIDSelector *v1.Selector `json:"groupIdSelector,omitempty" tf:"-"`

	// Specifies the ID of the APIG dedicated instance to which the API group
	// where the API custom response belongs. Changing this will create a new API custom response resource.
	// The ID of the dedicated instance to which the API group and the API custom response belongs.
	// +crossplane:generate:reference:type=Instance
	// +kubebuilder:validation:Optional
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Reference to a Instance to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDRef *v1.Reference `json:"instanceIdRef,omitempty" tf:"-"`

	// Selector for a Instance to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDSelector *v1.Selector `json:"instanceIdSelector,omitempty" tf:"-"`

	// Specifies the name of the API custom response. The name consists of 1 to 64 characters,
	// and only letters, digits, hyphens(-), and underscores (_) are allowed.
	// The name of the API custom response.
	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// Specifies the region in which to create the API custom response resource. If
	// omitted, the provider-level region will be used. Changing this will create a new API custom response resource.
	// The region where the API custom response is located.
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies the API custom response rules definition. The object structure is documented
	// below.
	// The API custom response rules definition.
	// +kubebuilder:validation:Optional
	Rule []RuleParameters `json:"rule,omitempty" tf:"rule,omitempty"`
}

type RuleObservation struct {
}

type RuleParameters struct {

	// Specifies the body template of the API response rule, e.g.
	// {\"code\":\"$context.authorizer.frontend.code\",\"message\":\"$context.authorizer.frontend.message\"}
	// The body template of the API custom response rule.
	// +kubebuilder:validation:Required
	Body *string `json:"body" tf:"body,omitempty"`

	// Specifies the type of the API custom response rule.
	// The error type of the API custom response rule.
	// +kubebuilder:validation:Required
	ErrorType *string `json:"errorType" tf:"error_type,omitempty"`

	// Specifies the HTTP status code of the API response rule.
	// The HTTP status code of the API custom response rule.
	// +kubebuilder:validation:Optional
	StatusCode *float64 `json:"statusCode,omitempty" tf:"status_code,omitempty"`
}

// ResponseSpec defines the desired state of Response
type ResponseSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ResponseParameters `json:"forProvider"`
}

// ResponseStatus defines the observed state of Response.
type ResponseStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ResponseObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// Response is the Schema for the Responses API. ""page_title: "flexibleengine_apig_response"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,flexibleengine}
type Response struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ResponseSpec   `json:"spec"`
	Status            ResponseStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ResponseList contains a list of Responses
type ResponseList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Response `json:"items"`
}

// Repository type metadata.
var (
	Response_Kind             = "Response"
	Response_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Response_Kind}.String()
	Response_KindAPIVersion   = Response_Kind + "." + CRDGroupVersion.String()
	Response_GroupVersionKind = CRDGroupVersion.WithKind(Response_Kind)
)

func init() {
	SchemeBuilder.Register(&Response{}, &ResponseList{})
}
