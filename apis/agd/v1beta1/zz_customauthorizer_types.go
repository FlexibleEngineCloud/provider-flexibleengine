/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type CustomAuthorizerObservation struct {

	// Time when the APIG custom authorizer was created.
	CreateTime *string `json:"createTime,omitempty" tf:"create_time,omitempty"`

	// ID of the custom authorizer.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type CustomAuthorizerParameters struct {

	// Specifies the maximum cache age.
	// Changing this will create a new custom authorizer resource.
	// +kubebuilder:validation:Optional
	CacheAge *float64 `json:"cacheAge,omitempty" tf:"cache_age,omitempty"`

	// Specifies the uniform function URN of the function graph resource.
	// Changing this will create a new custom authorizer resource.
	// +kubebuilder:validation:Required
	FunctionUrn *string `json:"functionUrn" tf:"function_urn,omitempty"`

	// Specifies an array of one or more parameter identities of the custom authorizer.
	// The object structure is documented below.
	// +kubebuilder:validation:Optional
	Identity []IdentityParameters `json:"identity,omitempty" tf:"identity,omitempty"`

	// Specifies an ID of the APIG dedicated instance to which the
	// custom authorizer belongs to.
	// Changing this will create a new custom authorizer resource.
	// +crossplane:generate:reference:type=Instance
	// +kubebuilder:validation:Optional
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Reference to a Instance to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDRef *v1.Reference `json:"instanceIdRef,omitempty" tf:"-"`

	// Selector for a Instance to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDSelector *v1.Selector `json:"instanceIdSelector,omitempty" tf:"-"`

	// Specifies whether to send the body.
	// Changing this will create a new custom authorizer resource.
	// +kubebuilder:validation:Optional
	IsBodySend *bool `json:"isBodySend,omitempty" tf:"is_body_send,omitempty"`

	// Specifies the name of the custom authorizer.
	// The custom authorizer name consists of 3 to 64 characters, starting with a letter.
	// Only letters, digits and underscores (_) are allowed.
	// Changing this will create a new custom authorizer resource.
	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// Specifies the region in which to create the custom authorizer resource.
	// If omitted, the provider-level region will be used.
	// Changing this will create a new custom authorizer resource.
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies the custom authoriz type.
	// The valid values are FRONTEND and BACKEND.
	// Changing this will create a new custom authorizer resource.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Specifies the user data, which can contain a maximum of 2,048 characters.
	// The user data is used by APIG to invoke the specified authentication function when accessing the backend service.
	// Changing this will create a new custom authorizer resource.
	// +kubebuilder:validation:Optional
	UserData *string `json:"userData,omitempty" tf:"user_data,omitempty"`
}

type IdentityObservation struct {
}

type IdentityParameters struct {

	// Specifies the parameter location, which support 'HEADER' and 'QUERY'.
	// Changing this will create a new custom authorizer resource.
	// +kubebuilder:validation:Required
	Location *string `json:"location" tf:"location,omitempty"`

	// Specifies the name of the parameter to be verified.
	// The parameter includes front-end and back-end parameters.
	// Changing this will create a new custom authorizer resource.
	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// Specifies the parameter verification expression.
	// If omitted, the custom authorizer will not perform verification.
	// The valid value is range form 1 to 2,048.
	// Changing this will create a new custom authorizer resource.
	// +kubebuilder:validation:Optional
	Validation *string `json:"validation,omitempty" tf:"validation,omitempty"`
}

// CustomAuthorizerSpec defines the desired state of CustomAuthorizer
type CustomAuthorizerSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     CustomAuthorizerParameters `json:"forProvider"`
}

// CustomAuthorizerStatus defines the observed state of CustomAuthorizer.
type CustomAuthorizerStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        CustomAuthorizerObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// CustomAuthorizer is the Schema for the CustomAuthorizers API. ""page_title: "flexibleengine_apig_custom_authorizer"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,flexibleengine}
type CustomAuthorizer struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              CustomAuthorizerSpec   `json:"spec"`
	Status            CustomAuthorizerStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// CustomAuthorizerList contains a list of CustomAuthorizers
type CustomAuthorizerList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []CustomAuthorizer `json:"items"`
}

// Repository type metadata.
var (
	CustomAuthorizer_Kind             = "CustomAuthorizer"
	CustomAuthorizer_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: CustomAuthorizer_Kind}.String()
	CustomAuthorizer_KindAPIVersion   = CustomAuthorizer_Kind + "." + CRDGroupVersion.String()
	CustomAuthorizer_GroupVersionKind = CRDGroupVersion.WithKind(CustomAuthorizer_Kind)
)

func init() {
	SchemeBuilder.Register(&CustomAuthorizer{}, &CustomAuthorizerList{})
}
