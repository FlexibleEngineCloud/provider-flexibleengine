/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type VPCFlowLogObservation struct {

	// The VPC flow log ID in UUID format.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The status of the flow log. The value can be ACTIVE, DOWN or ERROR.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`
}

type VPCFlowLogParameters struct {

	// (Optinal, String) Specifies supplementary information about the VPC flow log.
	// The value is a string of no more than 255 characters and cannot contain angle brackets (< or >).
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the LTS log group ID.
	// Changing this creates a new VPC flow log.
	// +crossplane:generate:reference:type=github.com/FlexibleEngineCloud/provider-flexibleengine/apis/lts/v1beta1.Group
	// +kubebuilder:validation:Optional
	LogGroupID *string `json:"logGroupId,omitempty" tf:"log_group_id,omitempty"`

	// Reference to a Group in lts to populate logGroupId.
	// +kubebuilder:validation:Optional
	LogGroupIDRef *v1.Reference `json:"logGroupIdRef,omitempty" tf:"-"`

	// Selector for a Group in lts to populate logGroupId.
	// +kubebuilder:validation:Optional
	LogGroupIDSelector *v1.Selector `json:"logGroupIdSelector,omitempty" tf:"-"`

	// Specifies the LTS log topic ID.
	// Changing this creates a new VPC flow log.
	// +crossplane:generate:reference:type=github.com/FlexibleEngineCloud/provider-flexibleengine/apis/lts/v1beta1.Topic
	// +kubebuilder:validation:Optional
	LogTopicID *string `json:"logTopicId,omitempty" tf:"log_topic_id,omitempty"`

	// Reference to a Topic in lts to populate logTopicId.
	// +kubebuilder:validation:Optional
	LogTopicIDRef *v1.Reference `json:"logTopicIdRef,omitempty" tf:"-"`

	// Selector for a Topic in lts to populate logTopicId.
	// +kubebuilder:validation:Optional
	LogTopicIDSelector *v1.Selector `json:"logTopicIdSelector,omitempty" tf:"-"`

	// Specifies the VPC flow log name. The value is a string of 1 to 64 characters
	// that can contain letters, digits, underscores (_), hyphens (-) and periods (.).
	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// The region in which to create the VPC flow log resource.
	// If omitted, the provider-level region will be used. Changing this creates a new VPC flow log.
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies the network port ID.
	// Changing this creates a new VPC flow log.
	// +crossplane:generate:reference:type=github.com/FlexibleEngineCloud/provider-flexibleengine/apis/ecs/v1beta1.Instance
	// +crossplane:generate:reference:extractor=github.com/FlexibleEngineCloud/provider-flexibleengine/pkg/tools.ExtractorParamPathfunc(true, "network", "0", "port")
	// +kubebuilder:validation:Optional
	ResourceID *string `json:"resourceId,omitempty" tf:"resource_id,omitempty"`

	// Reference to a Instance in ecs to populate resourceId.
	// +kubebuilder:validation:Optional
	ResourceIDRef *v1.Reference `json:"resourceIdRef,omitempty" tf:"-"`

	// Selector for a Instance in ecs to populate resourceId.
	// +kubebuilder:validation:Optional
	ResourceIDSelector *v1.Selector `json:"resourceIdSelector,omitempty" tf:"-"`

	// The type of resource on which to create the VPC flow log. The value is fixed to port.
	// +kubebuilder:validation:Optional
	ResourceType *string `json:"resourceType,omitempty" tf:"resource_type,omitempty"`

	// (Optinal, String, ForceNew) Specifies the type of traffic to log. The value can be:
	// +kubebuilder:validation:Optional
	TrafficType *string `json:"trafficType,omitempty" tf:"traffic_type,omitempty"`
}

// VPCFlowLogSpec defines the desired state of VPCFlowLog
type VPCFlowLogSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     VPCFlowLogParameters `json:"forProvider"`
}

// VPCFlowLogStatus defines the observed state of VPCFlowLog.
type VPCFlowLogStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        VPCFlowLogObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// VPCFlowLog is the Schema for the VPCFlowLogs API. ""page_title: "flexibleengine_vpc_flow_log_v1"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,flexibleengine}
type VPCFlowLog struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              VPCFlowLogSpec   `json:"spec"`
	Status            VPCFlowLogStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// VPCFlowLogList contains a list of VPCFlowLogs
type VPCFlowLogList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []VPCFlowLog `json:"items"`
}

// Repository type metadata.
var (
	VPCFlowLog_Kind             = "VPCFlowLog"
	VPCFlowLog_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: VPCFlowLog_Kind}.String()
	VPCFlowLog_KindAPIVersion   = VPCFlowLog_Kind + "." + CRDGroupVersion.String()
	VPCFlowLog_GroupVersionKind = CRDGroupVersion.WithKind(VPCFlowLog_Kind)
)

func init() {
	SchemeBuilder.Register(&VPCFlowLog{}, &VPCFlowLogList{})
}
