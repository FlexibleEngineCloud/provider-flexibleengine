/*
Copyright 2022 Upbound Inc.
*/
// Code generated by angryjet. DO NOT EDIT.

package v1beta1

import (
	"context"
	v1beta1 "github.com/FrangipaneTeam/provider-flexibleengine/apis/mrs/v1beta1"
	tools "github.com/FrangipaneTeam/provider-flexibleengine/pkg/tools"
	reference "github.com/crossplane/crossplane-runtime/pkg/reference"
	errors "github.com/pkg/errors"
	client "sigs.k8s.io/controller-runtime/pkg/client"
)

// ResolveReferences of this Instance.
func (mg *Instance) ResolveReferences(ctx context.Context, c client.Reader) error {
	r := reference.NewAPIResolver(c, mg)

	var rsp reference.ResolutionResponse
	var err error

	for i3 := 0; i3 < len(mg.Spec.ForProvider.MrsCluster); i3++ {
		rsp, err = r.Resolve(ctx, reference.ResolutionRequest{
			CurrentValue: reference.FromPtrValue(mg.Spec.ForProvider.MrsCluster[i3].ID),
			Extract:      tools.ExtractorParamPathfunc(true, "id"),
			Reference:    mg.Spec.ForProvider.MrsCluster[i3].IDRef,
			Selector:     mg.Spec.ForProvider.MrsCluster[i3].IDSelector,
			To: reference.To{
				List:    &v1beta1.ClusterList{},
				Managed: &v1beta1.Cluster{},
			},
		})
		if err != nil {
			return errors.Wrap(err, "mg.Spec.ForProvider.MrsCluster[i3].ID")
		}
		mg.Spec.ForProvider.MrsCluster[i3].ID = reference.ToPtrValue(rsp.ResolvedValue)
		mg.Spec.ForProvider.MrsCluster[i3].IDRef = rsp.ResolvedReference

	}
	for i3 := 0; i3 < len(mg.Spec.ForProvider.MrsCluster); i3++ {
		rsp, err = r.Resolve(ctx, reference.ResolutionRequest{
			CurrentValue: reference.FromPtrValue(mg.Spec.ForProvider.MrsCluster[i3].UserName),
			Extract:      tools.ExtractorParamPathfunc(true, "user_name"),
			Reference:    mg.Spec.ForProvider.MrsCluster[i3].UserNameRef,
			Selector:     mg.Spec.ForProvider.MrsCluster[i3].UserNameSelector,
			To: reference.To{
				List:    &v1beta1.ClusterList{},
				Managed: &v1beta1.Cluster{},
			},
		})
		if err != nil {
			return errors.Wrap(err, "mg.Spec.ForProvider.MrsCluster[i3].UserName")
		}
		mg.Spec.ForProvider.MrsCluster[i3].UserName = reference.ToPtrValue(rsp.ResolvedValue)
		mg.Spec.ForProvider.MrsCluster[i3].UserNameRef = rsp.ResolvedReference

	}

	return nil
}
