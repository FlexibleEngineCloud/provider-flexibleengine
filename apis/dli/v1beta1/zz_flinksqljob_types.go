/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type FlinksqlJobObservation struct {

	// The Job ID in Int format.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	Status *string `json:"status,omitempty" tf:"status,omitempty"`
}

type FlinksqlJobParameters struct {

	// Specifies whether to enable the automatic job snapshot function.
	// +kubebuilder:validation:Optional
	CheckpointEnabled *bool `json:"checkpointEnabled,omitempty" tf:"checkpoint_enabled,omitempty"`

	// Specifies snapshot interval. The unit is second.
	// The default value is 10.
	// +kubebuilder:validation:Optional
	CheckpointInterval *float64 `json:"checkpointInterval,omitempty" tf:"checkpoint_interval,omitempty"`

	// Specifies snapshot mode. There are two options:
	// +kubebuilder:validation:Optional
	CheckpointMode *string `json:"checkpointMode,omitempty" tf:"checkpoint_mode,omitempty"`

	// Specifies number of CUs selected for a job. The default value is 2.
	// +kubebuilder:validation:Optional
	CuNumber *float64 `json:"cuNumber,omitempty" tf:"cu_number,omitempty"`

	// Specifies job description. Length range: 1 to 512 characters.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies dirty data policy of a job.
	// +kubebuilder:validation:Optional
	DirtyDataStrategy *string `json:"dirtyDataStrategy,omitempty" tf:"dirty_data_strategy,omitempty"`

	// Specifies edge computing group IDs.
	// +kubebuilder:validation:Optional
	EdgeGroupIds []*string `json:"edgeGroupIds,omitempty" tf:"edge_group_ids,omitempty"`

	// Specifies retention time of the idle state. The unit is hour.
	// The default value is 1.
	// +kubebuilder:validation:Optional
	IdleStateRetention *float64 `json:"idleStateRetention,omitempty" tf:"idle_state_retention,omitempty"`

	// Specifies whether to enable the function of uploading job logs to
	// users' OBS buckets. The default value is false.
	// +kubebuilder:validation:Optional
	LogEnabled *bool `json:"logEnabled,omitempty" tf:"log_enabled,omitempty"`

	// Specifies number of CUs in the JobManager selected for a job.
	// The default value is 1.
	// +kubebuilder:validation:Optional
	ManagerCuNumber *float64 `json:"managerCuNumber,omitempty" tf:"manager_cu_number,omitempty"`

	// Specifies the name of the job. Length range: 1 to 57 characters.
	// which may consist of letters, digits, underscores (_) and hyphens (-).
	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// Specifies OBS path. OBS path where users are authorized to save the
	// snapshot. This parameter is valid only when checkpoint_enabled is set to true. OBS path where users are authorized
	// to save the snapshot. This parameter is valid only when log_enabled is set to true.
	// +crossplane:generate:reference:type=github.com/FrangipaneTeam/provider-flexibleengine/apis/oss/v1beta1.OBSBucket
	// +kubebuilder:validation:Optional
	ObsBucket *string `json:"obsBucket,omitempty" tf:"obs_bucket,omitempty"`

	// Reference to a OBSBucket in oss to populate obsBucket.
	// +kubebuilder:validation:Optional
	ObsBucketRef *v1.Reference `json:"obsBucketRef,omitempty" tf:"-"`

	// Selector for a OBSBucket in oss to populate obsBucket.
	// +kubebuilder:validation:Optional
	ObsBucketSelector *v1.Selector `json:"obsBucketSelector,omitempty" tf:"-"`

	// Specifies number of parallel for a job. The default value is 1.
	// +kubebuilder:validation:Optional
	ParallelNumber *float64 `json:"parallelNumber,omitempty" tf:"parallel_number,omitempty"`

	// Specifies name of a queue.
	// +kubebuilder:validation:Optional
	QueueName *string `json:"queueName,omitempty" tf:"queue_name,omitempty"`

	// The region in which to create the DLI flink job resource. If omitted, the
	// provider-level region will be used. Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies whether to enable the function of automatically
	// restarting a job upon job exceptions. The default value is false.
	// +kubebuilder:validation:Optional
	RestartWhenException *bool `json:"restartWhenException,omitempty" tf:"restart_when_exception,omitempty"`

	// Specifies whether the abnormal restart is recovered from the
	// checkpoint.
	// +kubebuilder:validation:Optional
	ResumeCheckpoint *bool `json:"resumeCheckpoint,omitempty" tf:"resume_checkpoint,omitempty"`

	// Specifies maximum number of retry times upon exceptions. The unit is
	// times/hour. Value range: -1 or greater than 0. The default value is -1, indicating that the number of times is
	// unlimited.
	// +kubebuilder:validation:Required
	ResumeMaxNum *float64 `json:"resumeMaxNum" tf:"resume_max_num,omitempty"`

	// Specifies job running mode. The options are as follows:
	// +kubebuilder:validation:Optional
	RunMode *string `json:"runMode,omitempty" tf:"run_mode,omitempty"`

	// Specifies customizes optimization parameters when a Flink job is
	// running.
	// +kubebuilder:validation:Optional
	RuntimeConfig map[string]*string `json:"runtimeConfig,omitempty" tf:"runtime_config,omitempty"`

	// Specifies stream SQL statement, which includes at least the following
	// three parts: source, query, and sink. Length range: 1024x1024 characters.
	// +kubebuilder:validation:Optional
	SQL *string `json:"sql,omitempty" tf:"sql,omitempty"`

	// Specifies SMN topic. If a job fails, the system will send a message to
	// users subscribed to the SMN topic.
	// +crossplane:generate:reference:type=github.com/FrangipaneTeam/provider-flexibleengine/apis/smn/v1beta1.Topic
	// +kubebuilder:validation:Optional
	SmnTopic *string `json:"smnTopic,omitempty" tf:"smn_topic,omitempty"`

	// Reference to a Topic in smn to populate smnTopic.
	// +kubebuilder:validation:Optional
	SmnTopicRef *v1.Reference `json:"smnTopicRef,omitempty" tf:"-"`

	// Selector for a Topic in smn to populate smnTopic.
	// +kubebuilder:validation:Optional
	SmnTopicSelector *v1.Selector `json:"smnTopicSelector,omitempty" tf:"-"`

	// Specifies the key/value pairs to associate with the resource.
	// +kubebuilder:validation:Optional
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Specifies number of CUs for each Task Manager. The default value is 1.
	// +kubebuilder:validation:Optional
	TmCus *float64 `json:"tmCus,omitempty" tf:"tm_cus,omitempty"`

	// Specifies number of slots in each Task Manager.
	// The default value is (parallel_number * tm_cus)/(cu_number - manager_cu_number).
	// +kubebuilder:validation:Optional
	TmSlotNum *float64 `json:"tmSlotNum,omitempty" tf:"tm_slot_num,omitempty"`

	// Specifies the type of the job. The valid values are flink_sql_job,
	// flink_opensource_sql_job and flink_sql_edge_job. Default value is flink_sql_job.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Specifies name of the resource package that has been uploaded to the
	// DLI resource management system. The UDF Jar file of the SQL job is specified by this parameter.
	// +kubebuilder:validation:Optional
	UdfJarURL *string `json:"udfJarUrl,omitempty" tf:"udf_jar_url,omitempty"`
}

// FlinksqlJobSpec defines the desired state of FlinksqlJob
type FlinksqlJobSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     FlinksqlJobParameters `json:"forProvider"`
}

// FlinksqlJobStatus defines the observed state of FlinksqlJob.
type FlinksqlJobStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        FlinksqlJobObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// FlinksqlJob is the Schema for the FlinksqlJobs API. ""page_title: "flexibleengine_dli_flinksql_job"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,flexibleengine}
type FlinksqlJob struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              FlinksqlJobSpec   `json:"spec"`
	Status            FlinksqlJobStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// FlinksqlJobList contains a list of FlinksqlJobs
type FlinksqlJobList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []FlinksqlJob `json:"items"`
}

// Repository type metadata.
var (
	FlinksqlJob_Kind             = "FlinksqlJob"
	FlinksqlJob_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: FlinksqlJob_Kind}.String()
	FlinksqlJob_KindAPIVersion   = FlinksqlJob_Kind + "." + CRDGroupVersion.String()
	FlinksqlJob_GroupVersionKind = CRDGroupVersion.WithKind(FlinksqlJob_Kind)
)

func init() {
	SchemeBuilder.Register(&FlinksqlJob{}, &FlinksqlJobList{})
}
