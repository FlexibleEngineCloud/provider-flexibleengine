/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type KafkaInstanceObservation struct {

	// Indicates the IP addresses of the DMS Kafka instance.
	ConnectAddress *string `json:"connectAddress,omitempty" tf:"connect_address,omitempty"`

	// Indicates the creation time of the DMS Kafka instance.
	CreatedAt *string `json:"createdAt,omitempty" tf:"created_at,omitempty"`

	// Indicates the message engine, the value is "kafka".
	Engine *string `json:"engine,omitempty" tf:"engine,omitempty"`

	// Indicates the DMS Kafka instance type, the value is "cluster".
	EngineType *string `json:"engineType,omitempty" tf:"engine_type,omitempty"`

	// Specifies a resource ID in UUID format.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Indicates the connection address of the Kafka Manager of a Kafka instance.
	ManegementConnectAddress *string `json:"manegementConnectAddress,omitempty" tf:"manegement_connect_address,omitempty"`

	// Indicates the count of ECS instances.
	NodeNum *float64 `json:"nodeNum,omitempty" tf:"node_num,omitempty"`

	// Indicates the maximum number of topics in the DMS Kafka instance.
	PartitionNum *float64 `json:"partitionNum,omitempty" tf:"partition_num,omitempty"`

	// Indicates the port number of the DMS Kafka instance.
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// Indicates the DMS Kafka instance specification.
	ProductSpecCode *string `json:"productSpecCode,omitempty" tf:"product_spec_code,omitempty"`

	// Indicates whether the Kafka SASL_SSL is enabled.
	SSLEnable *bool `json:"sslEnable,omitempty" tf:"ssl_enable,omitempty"`

	// Indicates the name of a security group.
	SecurityGroupName *string `json:"securityGroupName,omitempty" tf:"security_group_name,omitempty"`

	// Indicates the status of the DMS Kafka instance.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// Indicates the name of a subnet.
	SubnetName *string `json:"subnetName,omitempty" tf:"subnet_name,omitempty"`

	// Indicates the used message storage space. Unit: GB
	UsedStorageSpace *float64 `json:"usedStorageSpace,omitempty" tf:"used_storage_space,omitempty"`

	// Indicates the name of a vpc.
	VPCName *string `json:"vpcName,omitempty" tf:"vpc_name,omitempty"`
}

type KafkaInstanceParameters struct {

	// Specifies a username who can accesse the instance with
	// SASL authentication. A username consists of 4 to 64 characters and supports only letters, digits, and hyphens (-).
	// Changing this creates a new instance resource.
	// +kubebuilder:validation:Optional
	AccessUser *string `json:"accessUser,omitempty" tf:"access_user,omitempty"`

	// The names of the AZ where the Kafka instance resides.
	// Changing this creates a new instance resource.
	// +kubebuilder:validation:Required
	AvailabilityZones []*string `json:"availabilityZones" tf:"availability_zones,omitempty"`

	// The baseline bandwidth of a Kafka instance, that is, the maximum amount of
	// data transferred per unit time. The valid values are 100MB, 300MB, 600MB and 1200MB.
	// Changing this creates a new instance resource.
	// +kubebuilder:validation:Required
	Bandwidth *string `json:"bandwidth" tf:"bandwidth,omitempty"`

	// Specifies the description of the DMS Kafka instance.
	// It is a character string containing not more than 1,024 characters.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies whether to enable automatic topic creation. If automatic
	// topic creation is enabled, a topic will be automatically created with 3 partitions and 3 replicas when a message is
	// produced to or consumed from a topic that does not exist. Changing this creates a new instance resource.
	// +kubebuilder:validation:Optional
	EnableAutoTopic *bool `json:"enableAutoTopic,omitempty" tf:"enable_auto_topic,omitempty"`

	// Specifies the version of the Kafka engine. Valid values are "1.1.0"
	// and "2.3.0". Defaults to 2.3.0. Changing this creates a new instance resource.
	// +kubebuilder:validation:Optional
	EngineVersion *string `json:"engineVersion,omitempty" tf:"engine_version,omitempty"`

	// Specifies the time at which a maintenance time window starts. Format: HH:mm:ss.
	// The start time must be set to 22:00:00, 02:00:00, 06:00:00, 10:00:00, 14:00:00, or 18:00:00.
	// The system automatically allocates the default start time 02:00:00.
	// +kubebuilder:validation:Optional
	MaintainBegin *string `json:"maintainBegin,omitempty" tf:"maintain_begin,omitempty"`

	// Specifies the time at which a maintenance time window ends. Format: HH:mm:ss.
	// The end time is four hours later than the start time. For example, if the start time is 22:00:00, the end time is
	// 02:00:00. The system automatically allocates the default end time 06:00:00.
	// +kubebuilder:validation:Optional
	MaintainEnd *string `json:"maintainEnd,omitempty" tf:"maintain_end,omitempty"`

	// Specifies the password for logging in to the Kafka Manager. The
	// password must meet the following complexity requirements: Must be 8 to 32 characters long. Must contain at least 2 of
	// the following character types: lowercase letters, uppercase letters, digits, and special characters (`~!@#$%^&*()-_
	// =+\|[{}]:'",<.>/?). Changing this creates a new instance resource.
	// +kubebuilder:validation:Optional
	ManagerPasswordSecretRef *v1.SecretKeySelector `json:"managerPasswordSecretRef,omitempty" tf:"-"`

	// Specifies the username for logging in to the Kafka Manager.
	// The username consists of 4 to 64 characters and can contain letters, digits, hyphens (-), and underscores (_).
	// Changing this creates a new instance resource.
	// +kubebuilder:validation:Optional
	ManagerUser *string `json:"managerUser,omitempty" tf:"manager_user,omitempty"`

	// Specifies the name of the DMS Kafka instance. An instance name starts with a letter,
	// consists of 4 to 64 characters, and supports only letters, digits, hyphens (-) and underscores (_).
	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// Specifies the ID of a VPC subnet.
	// Changing this creates a new instance resource.
	// +crossplane:generate:reference:type=github.com/FlexibleEngineCloud/provider-flexibleengine/apis/vpc/v1beta1.VPCSubnet
	// +crossplane:generate:reference:extractor=github.com/FlexibleEngineCloud/provider-flexibleengine/pkg/tools.ExtractorParamPathfunc(true, "id")
	// +crossplane:generate:reference:refFieldName=NetworkIDRef
	// +crossplane:generate:reference:selectorFieldName=NetworkIDSelector
	// +kubebuilder:validation:Optional
	NetworkID *string `json:"networkId,omitempty" tf:"network_id,omitempty"`

	// Reference to a VPCSubnet in vpc to populate networkId.
	// +kubebuilder:validation:Optional
	NetworkIDRef *v1.Reference `json:"networkIdRef,omitempty" tf:"-"`

	// Selector for a VPCSubnet in vpc to populate networkId.
	// +kubebuilder:validation:Optional
	NetworkIDSelector *v1.Selector `json:"networkIdSelector,omitempty" tf:"-"`

	// Specifies the password of the access user. A password must meet the
	// following complexity requirements: Must be 8 to 32 characters long. Must contain at least 2 of the following character
	// types: lowercase letters, uppercase letters, digits, and special characters (`~!@#$%^&*()-_=+\|[{}]:'",<.>/?).
	// Changing this creates a new instance resource.
	// +kubebuilder:validation:Optional
	PasswordSecretRef *v1.SecretKeySelector `json:"passwordSecretRef,omitempty" tf:"-"`

	// Specifies a product ID. You can get the value from id of
	// flexibleengine_dms_product
	// data source. Changing this creates a new instance resource.
	// +kubebuilder:validation:Required
	ProductID *string `json:"productId" tf:"product_id,omitempty"`

	// Specifies the region in which to create the DMS Kafka instance resource.
	// If omitted, the provider-level region will be used. Changing this creates a new instance resource.
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies the ID of a security group.
	// +crossplane:generate:reference:type=github.com/FlexibleEngineCloud/provider-flexibleengine/apis/vpc/v1beta1.SecurityGroup
	// +crossplane:generate:reference:refFieldName=SecurityGroupIDRef
	// +crossplane:generate:reference:selectorFieldName=SecurityGroupIDSelector
	// +kubebuilder:validation:Optional
	SecurityGroupID *string `json:"securityGroupId,omitempty" tf:"security_group_id,omitempty"`

	// Reference to a SecurityGroup in vpc to populate securityGroupId.
	// +kubebuilder:validation:Optional
	SecurityGroupIDRef *v1.Reference `json:"securityGroupIdRef,omitempty" tf:"-"`

	// Selector for a SecurityGroup in vpc to populate securityGroupId.
	// +kubebuilder:validation:Optional
	SecurityGroupIDSelector *v1.Selector `json:"securityGroupIdSelector,omitempty" tf:"-"`

	// Specifies the message storage capacity, the unit is GB. Value range:
	// +kubebuilder:validation:Required
	StorageSpace *float64 `json:"storageSpace" tf:"storage_space,omitempty"`

	// Specifies the storage I/O specification. Value range:
	// +kubebuilder:validation:Optional
	StorageSpecCode *string `json:"storageSpecCode,omitempty" tf:"storage_spec_code,omitempty"`

	// Specifies the ID of a VPC.
	// Changing this creates a new instance resource.
	// +crossplane:generate:reference:type=github.com/FlexibleEngineCloud/provider-flexibleengine/apis/vpc/v1beta1.VPC
	// +kubebuilder:validation:Optional
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Reference to a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDRef *v1.Reference `json:"vpcIdRef,omitempty" tf:"-"`

	// Selector for a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDSelector *v1.Selector `json:"vpcIdSelector,omitempty" tf:"-"`
}

// KafkaInstanceSpec defines the desired state of KafkaInstance
type KafkaInstanceSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     KafkaInstanceParameters `json:"forProvider"`
}

// KafkaInstanceStatus defines the observed state of KafkaInstance.
type KafkaInstanceStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        KafkaInstanceObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// KafkaInstance is the Schema for the KafkaInstances API. ""page_title: "flexibleengine_dms_kafka_instance"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,flexibleengine}
type KafkaInstance struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              KafkaInstanceSpec   `json:"spec"`
	Status            KafkaInstanceStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// KafkaInstanceList contains a list of KafkaInstances
type KafkaInstanceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []KafkaInstance `json:"items"`
}

// Repository type metadata.
var (
	KafkaInstance_Kind             = "KafkaInstance"
	KafkaInstance_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: KafkaInstance_Kind}.String()
	KafkaInstance_KindAPIVersion   = KafkaInstance_Kind + "." + CRDGroupVersion.String()
	KafkaInstance_GroupVersionKind = CRDGroupVersion.WithKind(KafkaInstance_Kind)
)

func init() {
	SchemeBuilder.Register(&KafkaInstance{}, &KafkaInstanceList{})
}
